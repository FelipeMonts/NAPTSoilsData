Column.names
SoilTemp
SoilTemp.Col_names[2,1:3]
Column.names<-c(SoilTemp.Col_names[2,1:3],paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
Column.names
Column.names<-paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
Column.names<-paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_")
Column.names<-paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_")
Column.names
SoilTemp.Col_names[2,1:3]
as.character(SoilTemp.Col_names[2,1:3])
Column.names<-c(as.character(SoilTemp.Col_names[2,1:3]),paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
Column.names
length(out)
dim(out)
texture.data<-as.data.frame(out[[length(out)]])
texture.data
names(texture.data)
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
length(texture.data)
dim(texture.data)
dim(texture.data)[1]
texture.data<-as.data.frame(out[[length(out)]]) [seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1])]
texture.data<-as.data.frame(out[[length(out)]]) [seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]),-1]
texture.data
names(texture.data)<-Column.names
texture.data<-as.data.frame(out[[length(out)]]) [seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]),]
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
dim(texture.data)[1]
names(texture.data)<-Column.names
Column.names
texture.data<-as.data.frame(out[[length(out)]]) [seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]),]
texture.data<-as.data.frame(out[[length(out)]])
texture.data
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
dim(texture.data)[1]
names(texture.data)<-Column.names
texture.data
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
SoilTemp<-as.data.frame(out[[1]])
length(out)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,]
SoilTemp.Col_names[1,c(4,7,10,13,16)]
as.character(SoilTemp.Col_names[2,1:3])
Column.names<-c(as.character(SoilTemp.Col_names[2,1:3]),paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
texture.data<-as.data.frame(out[[length(out)]])
[seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]),]
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
dim(texture.data)[1]
names(texture.data)<-Column.names
head(texture.data)
texture.data<-as.data.frame(out[[length(out)]])
head(texture.data)
texture.data
(which(texture.data$V1=="Particle Size Analysis-Hydrometer")
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
texture.data$V1
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer")),dim(texture.data)[1])
seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer")),dim(texture.data)[1])
seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1])
texture.data<-as.data.frame(out[[length(out)]])
texture.data
texture.data<-as.data.frame(out[[length(out)]])
Column.names<-c(as.character(SoilTemp.Col_names[2,1:3]),paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
texture.data
as.data.frame(out[[length(out)]])
as.data.frame(out[[length(out)]])[seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]) ,]
texture.data<-as.data.frame(out[[length(out)]])[seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]) ,]
texture.data
names(texture.data)<-Column.names
head(texture.data)
Column.names
out <- extract_tables(NAPT.paths[1])
str(out)
SoilTemp<-as.data.frame(out[[1]])
length(out)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,]
SoilTemp.Col_names[1,c(4,7,10,13,16)]
as.character(SoilTemp.Col_names[2,1:3])
Column.names<-c(as.character(SoilTemp.Col_names[2,1:3]),paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
texture.data<-as.data.frame(out[[length(out)]])[seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]) ,]
as.data.frame(out[[length(out)]])
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
Column.names<-c(as.character(SoilTemp.Col_names[2,1:3]),paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
names(texture.data)
c(as.character(SoilTemp.Col_names[2,1:3])
as.character(SoilTemp.Col_names[2,1:3])
as.character(SoilTemp.Col_names[2,1:3])
SoilTemp.Col_names[2,1:3]
as.character(SoilTemp.Col_names[2,1:3])
SoilTemp.Col_names[2,1:3]
SoilTemp.Col_names[2,1:3]
Column.names<-c(SoilTemp.Col_names[2,1:3],paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
texture.data<-as.data.frame(out[[length(out)]])[seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]) ,]
Column.names
unlist(SoilTemp.Col_names[2,1:3])
str(SoilTemp.Col_names[2,1:3])
SoilTemp.Col_names[2,1:3]
as.vector(SoilTemp.Col_names[2,1:3])
as.vector(SoilTemp.Col_names[2,1:3],colnames=F)
SoilTemp.Col_names[2,1:3]
as.character(SoilTemp.Col_names[2,1:3])
SoilTemp.Col_names[2,1:3]
str(SoilTemp.Col_names[2,1:3])
a<-SoilTemp.Col_names[2,1:3]
a
unlist(SoilTemp.Col_names[2,1:3])
as.character(SoilTemp.Col_names[2,1:3])
SoilTemp.Col_names[2,1:3]
SoilTemp.Col_names[1,c(4,7,10,13,16)]
rep(c('Median' , 'MAD'),5)
paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5))
paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_")
Column.names<-data.frame(SoilTemp.Col_names[2,1:3],paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
Column.names<-c(SoilTemp.Col_names[2,1:3],paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_"))
Column.names
out <- extract_tables(NAPT.paths[1])
Column.names<-unlist(c(SoilTemp.Col_names[2,1:3],paste(SoilTemp.Col_names[1,c(4,7,10,13,16)],rep(c('Median' , 'MAD'),5), sep="_")))
Column.names
texture.data<-as.data.frame(out[[length(out)]])[seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]) ,]
names(texture.data)<-Column.names
as.data.frame(out[[length(out)]])
seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1])
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
# Preliminaries
rm(list = ls())
# Lets start by downloading an example web page:
url <- "http://www.naptprogram.org/lab-results/program-archive"
# We start by using the httr package to download the source html
page <- httr::GET(url)
# To get at the actual content of the page, we use the content() function:
page_content <- httr::content(page, "text")
# Now lets print it out
cat(page_content)
url.NAPT<-"http://www.naptprogram.org/lab-results/program-archive"
# As we can see, this produces a great deal of information
str(page)
NAPT.page<-httr::GET(url.NAPT)
library(XML)
library(rvest)
library(magrittr)
scraping_NAPT <- read_html ("http://www.naptprogram.org/lab-results")
Lab_Results   <- scraping_NAPT %>%
html_nodes ("td>a")
length(Lab_Results)
Node.names.scraping_NAPT<-html_text(Lab_Results) ;
str(Node.names.scraping_NAPT)
Soils.NAPT<-which(Node.names.scraping_NAPT == "Soil") ;
length(Lab_Results[Soils.NAPT])
head(Lab_Results[Soils.NAPT])
Soil.NAPT.paths<-strsplit(as.character(Lab_Results[Soils.NAPT]), split='"') ;
str(Soil.NAPT.paths)
NAPT.pdfs.1<-sapply(Soil.NAPT.paths,'[',2) ;
NAPT.paths<-paste0('http://www.naptprogram.org/',NAPT.pdfs.1) ;
install.packages('tabulizerjars')
install.packages("tabulizerjars")
library(tabulizer)
library(dplyr)
out <- extract_tables(NAPT.paths[1])
str(out)
SoilTemp<-as.data.frame(out[[1]])
length(out)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,]
SoilTemp.Col_names[1,c(4,7,10,13,16)]
as.character(SoilTemp.Col_names[2,1:3])
SoilTemp.Col_names[1,c(4,7,10,13,16)]
unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])
SoilTemp<-as.data.frame(out[[1]], stringsAsFactors = F)
length(out)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,]
SoilTemp.Col_names
unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])
unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)]))
unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)]))
SoilTemp.Col_names[1,c(4,7,10,13,16)]
Column.names<-paste(unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])),rep(c('Median' , 'MAD'),5), sep="_")
Column.names
unname(unlist(SoilTemp.Col_names[1,]))
unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)]))
unname(unlist(SoilTemp.Col_names[2,seq(1:3)]))
Column.names<-c(unname(unlist(SoilTemp.Col_names[2,seq(1:3)])),paste(unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])),rep(c('Median' , 'MAD'),5), sep="_"))
Column.names
texture.data<-as.data.frame(out[[length(out)]])[seq(which(texture.data$V1=="Particle Size Analysis-Hydrometer"),dim(texture.data)[1]) ,]
as.data.frame(out[[length(out)]])
which(texture.data$V1=="Particle Size Analysis-Hydrometer")
Column.names<-c(unname(unlist(SoilTemp.Col_names[2,seq(1:3)])),paste(unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])),rep(c('Median' , 'MAD'),5), sep="_"))
Column.names
Results.data<-as.data.frame(out[[length(out)]])
names(Results.data)<-Column.names
Results.data
row.names(Results.data)<-Results.data$Analysis
row.names(Results.data)<-
Results.data$Analysis
Results.data
which(Results.data$Analysis== ' Particle Size Analysis-Hydrometer')
which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer')
dim(Results.data)[1]
Texture.data<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1],]
Texture.data<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),]
Texture.data
Texture.data<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),]
Texture.data
head(texture.data)
head(Texture.data)
Texture.data
T(Texture.data)
t(Texture.data)
Texture.data<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),]
Texture.data
t(Texture.data)
print(t(Texture.data))
str(t(Texture.data)))
str(t(Texture.data))
a<-t(Texture.data)
View(a)
View(a)
NAPT.pdfs.1
NAPT.pdfs.1<-sapply(Soil.NAPT.paths,'[',2) ;
NAPT.paths
out <- extract_tables(NAPT.paths[1])
str(out)
length(out)
str(SoilTemp)
out[[1]]
out <- extract_tables(NAPT.paths[1])
str(out)
SoilTemp<-as.data.frame(out[[1]], stringsAsFactors = F)
length(out)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,]
unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)]))
unname(unlist(SoilTemp.Col_names[2,seq(1:3)]))
Column.names<-c(unname(unlist(SoilTemp.Col_names[2,seq(1:3)])),paste(unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])),rep(c('Median' , 'MAD'),5), sep="_"))
Results.data<-as.data.frame(out[[length(out)]])
Results.data<-as.data.frame(out[[length(out)]])
Results.data
names(Results.data)<-Column.names
Texture.data<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),]
Texture.data
Texture.data.1<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),]
Texture.data<-t(Texture.data.1) ;
Texture.data
out.1 <- extract_tables(NAPT.paths[1]) ;
str(out.1)
SoilTemp<-as.data.frame(out.1[[1]], stringsAsFactors = F) ;
length(out.1)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,] ;
unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])) ;
unname(unlist(SoilTemp.Col_names[2,seq(1:3)])) ;
Column.names<-c(unname(unlist(SoilTemp.Col_names[2,seq(1:3)])),paste(unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])),rep(c('Median' , 'MAD'),5), sep="_")) ;
Results.data<-as.data.frame(out[[length(out.1)]]);
names(Results.data)<-Column.names ;
Texture.data.1<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),];
Texture.data<-t(Texture.data.1) ;
out<-extract_tables(NAPT.paths[2]) ;
out<-extract_tables(NAPT.paths[2]) ;
out.dataframe<-as.data.frame(out[[length(out)]]);
names(out.dataframe)<-Column.names ;
Texture.data<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
Texture.data.all<-t(Texture.data.1) ;
Texture.data<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
Texture.data
Texture.data.temp<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
t(Texture.data.temp)
out.dataframe<-as.data.frame(out[[length(out)]],stringsAsFactors = F);
names(out.dataframe)<-Column.names ;
Texture.data.temp<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
t(Texture.data.temp)
Texture.data.all<-t(Texture.data.1) ;
Texture.data.all
t(Texture.data.temp)
Texture.data.all<-t(Texture.data.1) ;
m <- cbind(1, 1:7)
m
Texture.data.all<-rbind(Texture.data.1,Texture.data.temp)
Texture.data.all
Texture.data.1<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),];
Texture.data.1
Texture.data.all<-t(Texture.data.1)
Texture.data.all
Texture.data.1<-Texture.data.all ;
out<-extract_tables(NAPT.paths[2]) ;
out.dataframe<-as.data.frame(out[[length(out)]],stringsAsFactors = F);
names(out.dataframe)<-Column.names ;
Texture.data.temp<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
Texture.data.all<-rbind(Texture.data.1,t(Texture.data.temp))
Texture.data.1
t(Texture.data.temp)
dd <- 10
rbind(1:4, c = 2, "a++" = 10, dd, deparse.level = 0) # middle 2 rownames
t(Texture.data.temp)
str(Texture.data.all)
str(t(Texture.data.temp))
View(Texture.data.all)
View(Texture.data.all)
Texture.data.temp<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
dim(out.dataframe)[1]
Texture.data.temp<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
Texture.data.all<-rbind(Texture.data.1,t(Texture.data.temp))
Texture.data.all<-rbind(Texture.data.1,t(Texture.data.temp),deparse.level=0 )
str(Texture.data.all)
str(t(Texture.data.temp))
t(Texture.data.temp)
Texture.data.all
dim(Texture.data.all)
dim(t(Texture.data.temp))
head(Texture.data.all)
head(t(Texture.data.temp))
names(Texture.data.all)
names(Texture.data.all)
names(t(Texture.data.temp))
names(Texture.data.all)<-t(Texture.data.1)[1,]
Texture.data.all
Texture.data.all<-t(Texture.data.1) ;
Texture.data.all
t(Texture.data.1)[1,]
Texture.data.all<-t(Texture.data.1) ;
names(Texture.data.all)<-t(Texture.data.1)[1,]
Texture.data.all
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
# Preliminaries
rm(list = ls())
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
# httr is a package for downloading html
library(httr)
# A package for manipulating strings
library(stringr)
# Lets start by downloading an example web page:
url <- "http://www.naptprogram.org/lab-results/program-archive"
# We start by using the httr package to download the source html
page <- httr::GET(url)
# As we can see, this produces a great deal of information
str(page)
# To get at the actual content of the page, we use the content() function:
page_content <- httr::content(page, "text")
# Now lets print it out
cat(page_content)
url.NAPT<-"http://www.naptprogram.org/lab-results/program-archive"
NAPT.page<-httr::GET(url.NAPT)
library(XML)
library(rvest)
library(magrittr)
scraping_NAPT <- read_html ("http://www.naptprogram.org/lab-results")
Lab_Results   <- scraping_NAPT %>%
html_nodes ("td>a")
length(Lab_Results)
Node.names.scraping_NAPT<-html_text(Lab_Results) ;
str(Node.names.scraping_NAPT)
Soils.NAPT<-which(Node.names.scraping_NAPT == "Soil") ;
length(Lab_Results[Soils.NAPT])
head(Lab_Results[Soils.NAPT])
Soil.NAPT.paths<-strsplit(as.character(Lab_Results[Soils.NAPT]), split='"') ;
str(Soil.NAPT.paths)
NAPT.pdfs.1<-sapply(Soil.NAPT.paths,'[',2) ;
NAPT.paths<-paste0('http://www.naptprogram.org/',NAPT.pdfs.1) ;
library(tabulizer)
library(dplyr)
out.1 <- extract_tables(NAPT.paths[1]) ;
out.1
SoilTemp<-as.data.frame(out.1[[1]], stringsAsFactors = F) ;
SoilTemp
str(out.1)
SoilTemp<-as.data.frame(out.1[[1]], stringsAsFactors = F) ;
length(out.1)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,] ;
SoilTemp.Col_names
unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])) ;
unname(unlist(SoilTemp.Col_names[2,seq(1:3)])) ;
Column.names<-c(unname(unlist(SoilTemp.Col_names[2,seq(1:3)])),paste(unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])),rep(c('Median' , 'MAD'),5), sep="_")) ;
Column.names
Results.data<-as.data.frame(out[[length(out.1)]]);
Results.data
Results.data<-as.data.frame(out.1[[length(out.1)]]);
Results.data
names(Results.data)<-Column.names ;
Texture.data.1<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),];
Texture.data.1
t(Texture.data.1)
Texture.data.all<-t(Texture.data.1) ;
Texture.data.all<-t(Texture.data.1) ;
Texture.data.all
names(Texture.data.all)
t(Texture.data.1)[1,]
str(t(Texture.data.1)[1,])
str(unmamed(t(Texture.data.1)[1,]))
str(unnamed(t(Texture.data.1)[1,]))
str(unname(t(Texture.data.1)[1,]))
names(Texture.data.all)<-unname(t(Texture.data.1)[1,])
Texture.data.all
Texture.data.all<-t(Texture.data.1) ;
Texture.data.all
str(Texture.data.all)
Texture.data.all<-data.frame(t(Texture.data.1)) ;
str(Texture.data.all)
Texture.data.all<-data.frame(t(Texture.data.1),stringsAsFactors = F) ;
str(Texture.data.all)
names(Texture.data.all)
Texture.data.all
View(Texture.data.all)
names(Texture.data.all)<-Texture.data.all[1,]
Texture.data.all
Texture.data.1<-Texture.data.all ;
out<-extract_tables(NAPT.paths[2]) ;
out.dataframe<-as.data.frame(out[[length(out)]],stringsAsFactors = F);
names(out.dataframe)<-Column.names ;
Texture.data.temp<-out.dataframe[seq(which(out.dataframe$Analysis == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
Texture.data.all<-rbind(Texture.data.1,t(Texture.data.temp),deparse.level=0)
Texture.data.temp
Texture.data.all<-rbind(Texture.data.1,data.frame(t(Texture.data.temp)),deparse.level=0)
Texture.data.1
data.frame(t(Texture.data.temp))
Texture.data.temp
Texture.data.1<-Texture.data.all ;
out<-extract_tables(NAPT.paths[2]) ;
out.dataframe<-as.data.frame(out[[length(out)]],stringsAsFactors = F);
out.dataframe
which(out.dataframe$V1 == 'Particle Size Analysis-Hydrometer')
Texture.data.temp<-out.dataframe[seq(which(out.dataframe$V1 == 'Particle Size Analysis-Hydrometer'),dim(out.dataframe)[1]),];
Texture.data.temp
t(Texture.data.temp)
data.frame(t(Texture.data.temp))
Texture.data.temp.2<-data.frame(t(Texture.data.temp));
names(Texture.data.temp.2)<-names(Texture.data.all) ;
Texture.data.temp.2
names(Texture.data.temp.2)<-Texture.data.temp.2[1,];
Texture.data.temp.2
Texture.data.temp.2<-data.frame(t(Texture.data.temp));
Texture.data.temp.2
names(Texture.data.temp.2)
Results.data<-as.data.frame(out.1[[length(out.1)]]);
names(Results.data)<-Column.names ;
Results.data<-as.data.frame(out.1[[length(out.1)]]);
Results.data
str(Results.data)
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
# Preliminaries
rm(list = ls())
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
# httr is a package for downloading html
library(httr)
# A package for manipulating strings
library(stringr)
# Lets start by downloading an example web page:
url <- "http://www.naptprogram.org/lab-results/program-archive"
# We start by using the httr package to download the source html
page <- httr::GET(url)
# As we can see, this produces a great deal of information
str(page)
# To get at the actual content of the page, we use the content() function:
page_content <- httr::content(page, "text")
# Now lets print it out
cat(page_content)
url.NAPT<-"http://www.naptprogram.org/lab-results/program-archive"
NAPT.page<-httr::GET(url.NAPT)
library(XML)
library(rvest)
library(magrittr)
scraping_NAPT <- read_html ("http://www.naptprogram.org/lab-results")
Lab_Results   <- scraping_NAPT %>%
html_nodes ("td>a")
length(Lab_Results)
Node.names.scraping_NAPT<-html_text(Lab_Results) ;
str(Node.names.scraping_NAPT)
Soils.NAPT<-which(Node.names.scraping_NAPT == "Soil") ;
length(Lab_Results[Soils.NAPT])
head(Lab_Results[Soils.NAPT])
Soil.NAPT.paths<-strsplit(as.character(Lab_Results[Soils.NAPT]), split='"') ;
str(Soil.NAPT.paths)
NAPT.pdfs.1<-sapply(Soil.NAPT.paths,'[',2) ;
NAPT.paths<-paste0('http://www.naptprogram.org/',NAPT.pdfs.1) ;
library(tabulizer)
library(dplyr)
out.1 <- extract_tables(NAPT.paths[1]) ;
str(out.1)
SoilTemp<-as.data.frame(out.1[[1]], stringsAsFactors = F) ;
length(out.1)
str(SoilTemp)
head(SoilTemp,1)
SoilTemp.Col_names<-SoilTemp[1:3,] ;
unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])) ;
unname(unlist(SoilTemp.Col_names[2,seq(1:3)])) ;
Column.names<-c(unname(unlist(SoilTemp.Col_names[2,seq(1:3)])),paste(unname(unlist(SoilTemp.Col_names[1,c(4,7,10,13,16)])),rep(c('Median' , 'MAD'),5), sep="_")) ;
Results.data<-as.data.frame(out.1[[length(out.1)]]);
str(Results.data)
names(Results.data)<-Column.names ;
Texture.data.1<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),];
Texture.data.all<-data.frame(t(Texture.data.1),stringsAsFactors = F) ;
str(Texture.data.all)
names(Texture.data.all)<-Texture.data.all[1,]
Texture.data.all
Column.names
Results.data<-as.data.frame(out.1[[length(out.1)]]);
str(Results.data)
names(Results.data)<-Column.names ;
Texture.data.1<-Results.data[seq(which(Results.data$Analysis == 'Particle Size Analysis-Hydrometer'),dim(Results.data)[1]),];
Texture.data.all<-data.frame(t(Texture.data.1),stringsAsFactors = F) ;
str(Texture.data.all)
