#legend("bottomright", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(rgb(0,0,0,0.8) , rgb(0,1,0,0.8), rgb(0,0,1,1) ), pt.lwd=3)
text(2.5,96, "SILT", col="black")
text(2.5,87, "CLAY", col="black")
abline(h=91,lty=2, col=rgb(1,0,0,1), lwd=10)
par(fig = c(0.6,0.95, 0.1, 0.6 ), new=T)
# dev.off()
################################## Trial of insert Texture picture ######################
#par(fig = c(0,1,0,1))
par(fig = c(0.6,0.95, 0.1, 0.6 ), new=T)
# barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[7,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
frame.bg.col       ="gray75",
pch                =16,
col                 ="Black",
cex                = 1.5,
lwd                = 1,
cex.axis           = 0.8,
lwd.axis           = 0.8,
lwd.lab            = 0.8,
cex.lab            =0.8
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[5,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="GREEN",
cex                = 1.5,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[1,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="BLUE",
cex                = 1.5,
lwd                = 0.5
)
TT.text(
tri.data           = Comparing.Samples[c(7,5,1),],
geo                = geo.ALLP,
css.names          = c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
labels             = Comparing.Samples[c(7,5,1),"SAMPLE"],
pos                = 4,
cex                = 0.8,
offset             = 1
)
dev.off()
tiff(filename=paste0("../Manuscript/Figures/Figure.2",".tiff"), width=3840 , height=3840, pointsize = 80  )
#initilaizing the horizontal bar plot with the first scaled LD results
par(fig = c(0,1,0,1))
barplot(height=ScaledLD.data[,19], width=rep(1.4,74),names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8), horiz = T, ylim=c(0.01,110),las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
barplot(height=ScaledLD.data[,21], width=rep(1.4,74), space=0.2, col=rgb(0,0,1,0.7), horiz = T,las=1,add=T)
#legend("bottomright", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(rgb(0,0,0,0.8) , rgb(0,1,0,0.8), rgb(0,0,1,1) ), pt.lwd=3)
text(2.5,96, "SILT", col="black")
text(2.5,87, "CLAY", col="black")
abline(h=91,lty=2, col=rgb(1,0,0,1), lwd=10)
par(fig = c(0.6,0.95, 0.1, 0.6 ), new=T)
# dev.off()
################################## Trial of insert Texture picture ######################
#par(fig = c(0,1,0,1))
par(fig = c(0.6,0.95, 0.1, 0.6 ), new=T)
# barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[7,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
frame.bg.col       ="gray75",
pch                =16,
col                 ="Black",
cex                = 1.5,
lwd                = 1,
cex.axis           = 0.8,
lwd.axis           = 0.8,
lwd.lab            = 0.8,
cex.lab            =0.8
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[5,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="GREEN",
cex                = 1.5,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[1,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="BLUE",
cex                = 1.5,
lwd                = 0.5
)
TT.text(
tri.data           = Comparing.Samples[c(7,5,1),],
geo                = geo.ALLP,
css.names          = c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
labels             = Comparing.Samples[c(7,5,1),"SAMPLE"],
pos                = 3,
cex                = 1,
offset             = 1
)
dev.off()
barplot(height=ScaledLD.data[,19], width=rep(1.4,74),names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8), horiz = F, ylim=c(0.01,110),las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
barplot(height=ScaledLD.data[,21], width=rep(1.4,74), space=0.2, col=rgb(0,0,1,0.7), horiz = T,las=1,add=T)
par(fig = c(0,1,0,1))
barplot(height=ScaledLD.data[,19], width=rep(1.4,74),names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8), horiz = F, ylim=c(0.01,110),las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = F,las=1,add=T)
barplot(height=ScaledLD.data[,21], width=rep(1.4,74), space=0.2, col=rgb(0,0,1,0.7), horiz = F,las=1,add=T)
#
barplot(height=ScaledLD.data[,19], width=rep(1.4,74),names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8), horiz = F,las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
tiff(filename=paste0("../Manuscript/Figures/Figure.2",".tiff"), width=3840 , height=3840, pointsize = 80  )
#initilaizing the horizontal bar plot with the first scaled LD results
par(fig = c(0,1,0,1))
barplot(height=ScaledLD.data[,19], width=rep(1.4,74),names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8), horiz = T, ylim=c(0.01,110),las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
barplot(height=ScaledLD.data[,21], width=rep(1.4,74), space=0.2, col=rgb(0,0,1,0.7), horiz = T,las=1,add=T)
#legend("bottomright", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(rgb(0,0,0,0.8) , rgb(0,1,0,0.8), rgb(0,0,1,1) ), pt.lwd=3)
text(2.5,96, "SILT", col="black")
text(2.5,87, "CLAY", col="black")
abline(h=91,lty=2, col=rgb(1,0,0,1), lwd=10)
par(fig = c(0.6,0.95, 0.1, 0.6 ), new=T)
# dev.off()
################################## Trial of insert Texture picture ######################
#par(fig = c(0,1,0,1))
par(fig = c(0.6,0.95, 0.1, 0.6 ), new=T)
# barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[7,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
frame.bg.col       ="gray75",
pch                =16,
col                 ="Black",
cex                = 1.5,
lwd                = 1,
cex.axis           = 0.8,
lwd.axis           = 0.8,
lwd.lab            = 0.8,
cex.lab            =0.8
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[5,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="GREEN",
cex                = 1.5,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[1,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="BLUE",
cex                = 1.5,
lwd                = 0.5
)
TT.text(
tri.data           = Comparing.Samples[c(7,5,1),],
geo                = geo.ALLP,
css.names          = c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
labels             = Comparing.Samples[c(7,5,1),"SAMPLE"],
pos                = 3,
cex                = 1,
offset             = 1
)
dev.off()
barplot(height=ScaledLD.data[,19], width=rep(1.4,74),names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8), horiz = T, ylim=c(0.01,110),las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8), horiz = T,las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")), xlim=c(0,3.0))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.5, cex.axis=1,xlab="Particle Size Fraction (%)", ylab=expression(paste("Equivalent particle size ( ", mu, "m)")))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.5, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.5, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6), horiz = F,las=1,add=T)
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 1, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.5, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110))
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               ="Sample selected for comparison",
tri.data           = Comparing.Samples[7,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
frame.bg.col       ="gray75",
pch                =16,
col                 ="Black",
cex                = 3,
lwd                = 1
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[5,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="GREEN",
cex                = 3,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[2,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="BLUE",
cex                = 3,
lwd                = 0.5
)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
#legend("bottomright", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(rgb(0,0,0,0.8) , rgb(0,1,0,0.8), rgb(0,0,1,1) ), pt.lwd=3)
text(2.5,96, "SILT", col="black")
text(2.5,87, "CLAY", col="black")
abline(h=91,lty=2, col=rgb(1,0,0,1), lwd=10)
par(fig)
par('fig')
par("fin")
par("plt")
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
#legend("bottomright", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(rgb(0,0,0,0.8) , rgb(0,1,0,0.8), rgb(0,0,1,1) ), pt.lwd=3)
text(2.5,96, "SILT", col="black")
text(2.5,87, "CLAY", col="black")
abline(h=91,lty=2, col=rgb(1,0,0,1), lwd=10)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,3))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
par("plt")
par(plt= c(0.1,0.9, 0.1,0.9))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,3))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
#legend("bottomright", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(rgb(0,0,0,0.8) , rgb(0,1,0,0.8), rgb(0,0,1,1) ), pt.lwd=3)
text(2.5,96, "SILT", col="black")
text(2.5,87, "CLAY", col="black")
text(96,2.5, "SILT", col="black")
par('mar')
par('mai')
par(mar= c(5, 4, 4, 2) + 0.1.)
par(mar= c(5, 4, 4, 2) + 0.1)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], space=0.2, col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)], col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(0.5,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1.5,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1.1,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,18], space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,18], width=rep(1.2,74), space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], width=rep(1.2,74), space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,18], width=rep(1.2,74), space=0.2, col=rgb(0,1,0,0.6),las=1,add=T, beside=T)
barplot(height=ScaledLD.data[,21], width=rep(1.2,74), space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
barplot(height=ScaledLD.data[,18], width=rep(1.2,74), space=0.2, col=rgb(0,1,0,0.6),las=1,add=T, beside=T)
barplot(height=ScaledLD.data[,19],names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,18], width=rep(1.2,74), space=0.2, col=rgb(0,1,0,0.6),las=1,add=T)
barplot(height=ScaledLD.data[,21], width=rep(1.2,74), space=0.2, col=rgb(0,0,1,0.7),las=1,add=T)
ScaledLD.data
barplot(height=ScaledLD.data[,c(19,18)],names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
ScaledLD.data[,c(19,18)]
as.matrix(ScaledLD.data[,c(19,18)])
barplot(height=as.matrix(ScaledLD.data[,c(19,18)]),names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=as.matrix(ScaledLD.data[,c(19,18)]),beside=T,names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19]),beside=T,names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=ScaledLD.data[,19],beside=T,names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
counts <- table(mtcars$vs, mtcars$gear)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
counts
str(counts)
ScaledLD.data
t(ScaledLD.data)
barplot(height=t(ScaledLD.data),names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=t(ScaledLD.data),beside=T,names.arg=SizeLabels[seq(1,74)],width=rep(1.2,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=t(ScaledLD.data),beside=T,names.arg=SizeLabels[seq(1,74)],width=rep(0.5,74), col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=t(ScaledLD.data),beside=T,names.arg=SizeLabels[seq(1,74)], col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=t(ScaledLD.data),beside=T)
t(ScaledLD.data[,c(18,19,21])
barplot(height=t(ScaledLD.data),beside=T)
,names.arg=SizeLabels[seq(1,74)], col=rgb(0,0,0,0.8),las=1,cex.names = 0.8, cex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")),xlim=c(0.01,110), ylim=c(0,2.5))
t(ScaledLD.data[,c(18,19,21)])
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'))
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)],xlim=c(0.01,110), ylim=c(0,2.5))
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5))
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 0.8)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 0.5)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 0.5,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")))
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 0.5,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.5))
require(grDevices) # for colours
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
#- type = "h" plotting *is* 'bar'plot
lines(r, tN, type = "h", col = "red", lwd = 2)
hh <- t(VADeaths)[, 5:1]
mybarcol <- "gray20"
mp <- barplot(hh, beside = TRUE,
col = c("lightblue", "mistyrose",
"lightcyan", "lavender"),
legend = colnames(VADeaths), ylim = c(0,100),
main = "Death Rates in Virginia", font.main = 4,
sub = "Faked upper 2*sigma error bars", col.sub = mybarcol,
cex.names = 1.5)
segments(mp, hh, mp, hh + 2*sqrt(1000*hh/100), col = mybarcol, lwd = 1.5)
stopifnot(dim(mp) == dim(hh))  # corresponding matrices
mtext(side = 1, at = colMeans(mp), line = -2,
text = paste("Mean", formatC(colMeans(hh))), col = "red")
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = FALSE,
width = c(465, 840, 37),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 0.5,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.5),las=2)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.5),las=2)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('RED','BLUE','YELLOW'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c('BLACK','BLUE','GREEN'),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c(gray(0),gray(0.5),gray(0.8)),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c(gray(0),gray(0.5),gray(0.8)),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
legend("bottomright", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(gray(0),gray(0.5),gray(0.8)), pt.lwd=3)
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c(gray(0),gray(0.5),gray(0.8)),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
legend("topleft", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(gray(0),gray(0.5),gray(0.8)), pt.lwd=3)
text(96,2.5, "SILT", col="black")
text(96,2.0, "SILT", col="black")
text(87,2.0, "CLAY", col="black")
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c(gray(0),gray(0.5),gray(0.8)),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
legend("topleft", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(gray(0),gray(0.5),gray(0.8)), pt.lwd=3)
text(96,2.0, "SILT", col="black")
text(80,2.0, "CLAY", col="black")
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c(gray(0),gray(0.5),gray(0.8)),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
legend("topleft", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(gray(0),gray(0.5),gray(0.8)), pt.lwd=3)
text(100,2.0, "SILT", col="black")
text(75,2.0, "CLAY", col="black")
abline(v=91,lty=2, col=rgb(1,0,0,1), lwd=10)
par(fig = c(0,1,0,1))
barplot(height=t(ScaledLD.data[,c(18,19,21)]),beside=T,col= c(gray(0),gray(0.5),gray(0.8)),names.arg=SizeLabels[seq(1,74)], ylim=c(0,2.5),cex.names = 1,ex.axis=1,ylab="Particle Size Fraction (%)", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
legend("topleft", legend = c('SRS-1709', '2013-119', '2011-118' ), pch=c( 22, 22, 22), pt.bg = c(gray(0),gray(0.5),gray(0.8)), pt.lwd=3)
text(100,2.0, "SILT", col="BLACK")
text(75,2.0, "CLAY", col="BLACK")
abline(v=91,lty=2, col="BLACK", lwd=5)
par(fig = c(0.1,0.6, 0.5, 0.9 ), new=T)
# barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[7,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
frame.bg.col       ="gray75",
pch                =16,
col                 ="Black",
cex                = 1.5,
lwd                = 1,
cex.axis           = 0.8,
lwd.axis           = 0.8,
lwd.lab            = 0.8,
cex.lab            =0.8
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[5,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="GREEN",
cex                = 1.5,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[1,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="BLUE",
cex                = 1.5,
lwd                = 0.5
)
TT.text(
tri.data           = Comparing.Samples[c(7,5,1),],
geo                = geo.ALLP,
css.names          = c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
labels             = Comparing.Samples[c(7,5,1),"SAMPLE"],
pos                = 3,
cex                = 1,
offset             = 1
)
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###### Introduction to Web Scraping #####
# Preliminaries
rm(list = ls())
# Set your working directory to some place you can find
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
#install.packages("soiltexture")
library('soiltexture')
library(XLConnect) ;
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[7,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
frame.bg.col       ="gray75",
pch                =16,
col                 ="Black",
cex                = 1.5,
lwd                = 1,
cex.axis           = 0.8,
lwd.axis           = 0.8,
lwd.lab            = 0.8,
cex.lab            =0.8
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[5,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="GREEN",
cex                = 1.5,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[1,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="BLUE",
cex                = 1.5,
lwd                = 0.5
)
TT.text(
tri.data           = Comparing.Samples[c(7,5,1),],
geo                = geo.ALLP,
css.names          = c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
labels             = Comparing.Samples[c(7,5,1),"SAMPLE"],
pos                = 3,
cex                = 1,
offset             = 1
)
geo.ALLP<-TT.plot(
class.sys          ="USDA-NCSS.TT",
frame.bg.col       ="gray75",
bg                 ="white"
)
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[7,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
frame.bg.col       ="gray75",
pch                =16,
col                 ="Black",
cex                = 1.5,
lwd                = 1,
cex.axis           = 0.8,
lwd.axis           = 0.8,
lwd.lab            = 0.8,
cex.lab            =0.8
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[5,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="GREEN",
cex                = 1.5,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[1,],
css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
pch                = 21,
bg                 ="BLUE",
cex                = 1.5,
lwd                = 0.5
)
TT.text(
tri.data           = Comparing.Samples[c(7,5,1),],
geo                = geo.ALLP,
css.names          = c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
labels             = Comparing.Samples[c(7,5,1),"SAMPLE"],
pos                = 3,
cex                = 1,
offset             = 1
)
