data.ccc$X5[2]<-str_split(ccc[3,2], " ")[[1]][2] ;
data.ccc$X5[3]<-str_split(ccc[4,2], " ")[[1]][2] ;
str(data.ccc)
Clay.data<-data.frame(as.numeric(t(data.ccc)[,2]),as.numeric(t(data.ccc)[,3]))  ;
Clay.data
Clay.data$Sample<-t(data.ccc)[,1] ;
names(Clay.data)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Clay.data<-data.frame(as.numeric(t(data.ccc)[,2]),as.numeric(t(data.ccc)[,3]))  ;
Clay.data$Sample<-t(data.ccc)[,1] ;
names(Clay.data)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Clay.data
Texture.data<-merge(merge(Sand.data, Silt.data),Clay.data) ;
Texture.data.0<-Texture.data  ;
Texture.data
ALPP.Texture<-Texture.data
ALPP.Texture
rm(Texture.data , Texture.data.0)
ALPP.Tables
ALPP.Texture
rm(Texture.data , Texture.data.0)
for (i in seq(31:33)) {
Texture.data.0<-ALPP.Texture   ;
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', i, '.pdf'), pages=c(127:137) ) ;
########## Extract the Sand Data Summary ########################
sss<-ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[3]] ;
data.sss<-data.frame(sss[2:4,2:4], stringsAsFactors = F) ;
data.sss$X4<-str_split(sss[2,1], " ")[[1]][1] ;
data.sss$X4[2]<-str_split(sss[3,1], " ")[[1]][3] ;
data.sss$X4[3]<-str_split(sss[4,1], " ")[[1]][4] ;
data.sss$X5<-str_split(sss[2,1], " ")[[1]][2] ;
data.sss$X5[2]<-str_split(sss[3,1], " ")[[1]][4] ;
data.sss$X5[3]<-str_split(sss[4,1], " ")[[1]][5] ;
#str(data.sss)
Sand.data<-data.frame(as.numeric(t(data.sss)[,2]),as.numeric(t(data.sss)[,3]))  ;
Sand.data$Sample<-t(data.sss)[,1]
names(Sand.data)[1:2]<-c( 'Sand_Mean' , 'Sand_MAD') ;
########## Extract the Silt Data Summary ########################
sil<-ALPP.Tables[grepl('(SubTestCode 190)',ALPP.Tables)] [[3]] ;
data.sil<-data.frame(sil[2:4,3:5], stringsAsFactors = F) ;
data.sil$X4<-str_split(sil[2,2], " ")[[1]][1] ;
data.sil$X4[2]<-str_split(sil[3,2], " ")[[1]][1] ;
data.sil$X4[3]<-str_split(sil[4,2], " ")[[1]][1] ;
data.sil$X5<-str_split(sil[2,2], " ")[[1]][2] ;
data.sil$X5[2]<-str_split(sil[3,2], " ")[[1]][2] ;
data.sil$X5[3]<-str_split(sil[4,2], " ")[[1]][2] ;
#str(data.sil)
Silt.data<-data.frame(as.numeric(t(data.sil)[,2]),as.numeric(t(data.sil)[,3]))  ;
Silt.data$Sample<-t(data.sil)[,1]
names(Silt.data)[1:2]<-c('Silt_Mean' , 'Silt_MAD') ;
########## Extract the Clay Data Summary ########################
ccc<-ALPP.Tables[grepl('(SubTestCode 191)',ALPP.Tables)] [[3]] ;
data.ccc<-data.frame(ccc[2:4,3:5], stringsAsFactors = F) ;
data.ccc$X4<-str_split(ccc[2,2], " ")[[1]][1] ;
data.ccc$X4[2]<-str_split(ccc[3,2], " ")[[1]][1] ;
data.ccc$X4[3]<-str_split(ccc[4,2], " ")[[1]][1] ;
data.ccc$X5<-str_split(ccc[2,2], " ")[[1]][2] ;
data.ccc$X5[2]<-str_split(ccc[3,2], " ")[[1]][2] ;
data.ccc$X5[3]<-str_split(ccc[4,2], " ")[[1]][2] ;
#str(data.ccc)
Clay.data<-data.frame(as.numeric(t(data.ccc)[,2]),as.numeric(t(data.ccc)[,3]))  ;
Clay.data$Sample<-t(data.ccc)[,1] ;
names(Clay.data)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
########### combine the data together ##################
Texture.data<-merge(merge(Sand.data, Silt.data),Clay.data) ;
Texture.data.0<-Texture.data  ;
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
#ALPP.Texture<-Texture.data
rm(Texture.data , Texture.data.0)
}
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
# httr is a package for downloading html
library(httr)
# A package for manipulating strings
library(stringr)
library(stringi)
# packages for extracting pdf data and manipulating data
library(tabulizer)
library(dplyr)
dir.create("../ALPP_PDFs");
for (i in seq(31:33)) {
Texture.data.0<-ALPP.Texture   ;
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', i, '.pdf'), pages=c(127:137) ) ;
########## Extract the Sand Data Summary ########################
sss<-ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[3]] ;
data.sss<-data.frame(sss[2:4,2:4], stringsAsFactors = F) ;
data.sss$X4<-str_split(sss[2,1], " ")[[1]][1] ;
data.sss$X4[2]<-str_split(sss[3,1], " ")[[1]][3] ;
data.sss$X4[3]<-str_split(sss[4,1], " ")[[1]][4] ;
data.sss$X5<-str_split(sss[2,1], " ")[[1]][2] ;
data.sss$X5[2]<-str_split(sss[3,1], " ")[[1]][4] ;
data.sss$X5[3]<-str_split(sss[4,1], " ")[[1]][5] ;
#str(data.sss)
Sand.data<-data.frame(as.numeric(t(data.sss)[,2]),as.numeric(t(data.sss)[,3]))  ;
Sand.data$Sample<-t(data.sss)[,1]
names(Sand.data)[1:2]<-c( 'Sand_Mean' , 'Sand_MAD') ;
########## Extract the Silt Data Summary ########################
sil<-ALPP.Tables[grepl('(SubTestCode 190)',ALPP.Tables)] [[3]] ;
data.sil<-data.frame(sil[2:4,3:5], stringsAsFactors = F) ;
data.sil$X4<-str_split(sil[2,2], " ")[[1]][1] ;
data.sil$X4[2]<-str_split(sil[3,2], " ")[[1]][1] ;
data.sil$X4[3]<-str_split(sil[4,2], " ")[[1]][1] ;
data.sil$X5<-str_split(sil[2,2], " ")[[1]][2] ;
data.sil$X5[2]<-str_split(sil[3,2], " ")[[1]][2] ;
data.sil$X5[3]<-str_split(sil[4,2], " ")[[1]][2] ;
#str(data.sil)
Silt.data<-data.frame(as.numeric(t(data.sil)[,2]),as.numeric(t(data.sil)[,3]))  ;
Silt.data$Sample<-t(data.sil)[,1]
names(Silt.data)[1:2]<-c('Silt_Mean' , 'Silt_MAD') ;
########## Extract the Clay Data Summary ########################
ccc<-ALPP.Tables[grepl('(SubTestCode 191)',ALPP.Tables)] [[3]] ;
data.ccc<-data.frame(ccc[2:4,3:5], stringsAsFactors = F) ;
data.ccc$X4<-str_split(ccc[2,2], " ")[[1]][1] ;
data.ccc$X4[2]<-str_split(ccc[3,2], " ")[[1]][1] ;
data.ccc$X4[3]<-str_split(ccc[4,2], " ")[[1]][1] ;
data.ccc$X5<-str_split(ccc[2,2], " ")[[1]][2] ;
data.ccc$X5[2]<-str_split(ccc[3,2], " ")[[1]][2] ;
data.ccc$X5[3]<-str_split(ccc[4,2], " ")[[1]][2] ;
#str(data.ccc)
Clay.data<-data.frame(as.numeric(t(data.ccc)[,2]),as.numeric(t(data.ccc)[,3]))  ;
Clay.data$Sample<-t(data.ccc)[,1] ;
names(Clay.data)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
########### combine the data together ##################
Texture.data<-merge(merge(Sand.data, Silt.data),Clay.data) ;
Texture.data.0<-Texture.data  ;
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
#ALPP.Texture<-Texture.data
rm(Texture.data , Texture.data.0)
}
paste0('../ALPP_PDFs/','ALLP', i, '.pdf')
seq(31:33)
seq(31,33)
for (i in seq(31,33)) {
Texture.data.0<-ALPP.Texture   ;
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', i, '.pdf'), pages=c(127:137) ) ;
########## Extract the Sand Data Summary ########################
sss<-ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[3]] ;
data.sss<-data.frame(sss[2:4,2:4], stringsAsFactors = F) ;
data.sss$X4<-str_split(sss[2,1], " ")[[1]][1] ;
data.sss$X4[2]<-str_split(sss[3,1], " ")[[1]][3] ;
data.sss$X4[3]<-str_split(sss[4,1], " ")[[1]][4] ;
data.sss$X5<-str_split(sss[2,1], " ")[[1]][2] ;
data.sss$X5[2]<-str_split(sss[3,1], " ")[[1]][4] ;
data.sss$X5[3]<-str_split(sss[4,1], " ")[[1]][5] ;
#str(data.sss)
Sand.data<-data.frame(as.numeric(t(data.sss)[,2]),as.numeric(t(data.sss)[,3]))  ;
Sand.data$Sample<-t(data.sss)[,1]
names(Sand.data)[1:2]<-c( 'Sand_Mean' , 'Sand_MAD') ;
########## Extract the Silt Data Summary ########################
sil<-ALPP.Tables[grepl('(SubTestCode 190)',ALPP.Tables)] [[3]] ;
data.sil<-data.frame(sil[2:4,3:5], stringsAsFactors = F) ;
data.sil$X4<-str_split(sil[2,2], " ")[[1]][1] ;
data.sil$X4[2]<-str_split(sil[3,2], " ")[[1]][1] ;
data.sil$X4[3]<-str_split(sil[4,2], " ")[[1]][1] ;
data.sil$X5<-str_split(sil[2,2], " ")[[1]][2] ;
data.sil$X5[2]<-str_split(sil[3,2], " ")[[1]][2] ;
data.sil$X5[3]<-str_split(sil[4,2], " ")[[1]][2] ;
#str(data.sil)
Silt.data<-data.frame(as.numeric(t(data.sil)[,2]),as.numeric(t(data.sil)[,3]))  ;
Silt.data$Sample<-t(data.sil)[,1]
names(Silt.data)[1:2]<-c('Silt_Mean' , 'Silt_MAD') ;
########## Extract the Clay Data Summary ########################
ccc<-ALPP.Tables[grepl('(SubTestCode 191)',ALPP.Tables)] [[3]] ;
data.ccc<-data.frame(ccc[2:4,3:5], stringsAsFactors = F) ;
data.ccc$X4<-str_split(ccc[2,2], " ")[[1]][1] ;
data.ccc$X4[2]<-str_split(ccc[3,2], " ")[[1]][1] ;
data.ccc$X4[3]<-str_split(ccc[4,2], " ")[[1]][1] ;
data.ccc$X5<-str_split(ccc[2,2], " ")[[1]][2] ;
data.ccc$X5[2]<-str_split(ccc[3,2], " ")[[1]][2] ;
data.ccc$X5[3]<-str_split(ccc[4,2], " ")[[1]][2] ;
#str(data.ccc)
Clay.data<-data.frame(as.numeric(t(data.ccc)[,2]),as.numeric(t(data.ccc)[,3]))  ;
Clay.data$Sample<-t(data.ccc)[,1] ;
names(Clay.data)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
########### combine the data together ##################
Texture.data<-merge(merge(Sand.data, Silt.data),Clay.data) ;
Texture.data.0<-Texture.data  ;
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
#ALPP.Texture<-Texture.data
rm(Texture.data , Texture.data.0)
}
i
ALPP.Tables
ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)
]
ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[2]]
sss<-ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[2]] ;
data.sss<-data.frame(sss[2:4,2:4], stringsAsFactors = F) ;
data.sss
for (i in seq(32,33)) {
Texture.data.0<-ALPP.Texture   ;
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', i, '.pdf'), pages=c(127:137) ) ;
########## Extract the Sand Data Summary ########################
sss<-ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[3]] ;
data.sss<-data.frame(sss[2:4,2:4], stringsAsFactors = F) ;
data.sss$X4<-str_split(sss[2,1], " ")[[1]][1] ;
data.sss$X4[2]<-str_split(sss[3,1], " ")[[1]][3] ;
data.sss$X4[3]<-str_split(sss[4,1], " ")[[1]][4] ;
data.sss$X5<-str_split(sss[2,1], " ")[[1]][2] ;
data.sss$X5[2]<-str_split(sss[3,1], " ")[[1]][4] ;
data.sss$X5[3]<-str_split(sss[4,1], " ")[[1]][5] ;
#str(data.sss)
Sand.data<-data.frame(as.numeric(t(data.sss)[,2]),as.numeric(t(data.sss)[,3]))  ;
Sand.data$Sample<-t(data.sss)[,1]
names(Sand.data)[1:2]<-c( 'Sand_Mean' , 'Sand_MAD') ;
########## Extract the Silt Data Summary ########################
sil<-ALPP.Tables[grepl('(SubTestCode 190)',ALPP.Tables)] [[3]] ;
data.sil<-data.frame(sil[2:4,3:5], stringsAsFactors = F) ;
data.sil$X4<-str_split(sil[2,2], " ")[[1]][1] ;
data.sil$X4[2]<-str_split(sil[3,2], " ")[[1]][1] ;
data.sil$X4[3]<-str_split(sil[4,2], " ")[[1]][1] ;
data.sil$X5<-str_split(sil[2,2], " ")[[1]][2] ;
data.sil$X5[2]<-str_split(sil[3,2], " ")[[1]][2] ;
data.sil$X5[3]<-str_split(sil[4,2], " ")[[1]][2] ;
#str(data.sil)
Silt.data<-data.frame(as.numeric(t(data.sil)[,2]),as.numeric(t(data.sil)[,3]))  ;
Silt.data$Sample<-t(data.sil)[,1]
names(Silt.data)[1:2]<-c('Silt_Mean' , 'Silt_MAD') ;
########## Extract the Clay Data Summary ########################
ccc<-ALPP.Tables[grepl('(SubTestCode 191)',ALPP.Tables)] [[3]] ;
data.ccc<-data.frame(ccc[2:4,3:5], stringsAsFactors = F) ;
data.ccc$X4<-str_split(ccc[2,2], " ")[[1]][1] ;
data.ccc$X4[2]<-str_split(ccc[3,2], " ")[[1]][1] ;
data.ccc$X4[3]<-str_split(ccc[4,2], " ")[[1]][1] ;
data.ccc$X5<-str_split(ccc[2,2], " ")[[1]][2] ;
data.ccc$X5[2]<-str_split(ccc[3,2], " ")[[1]][2] ;
data.ccc$X5[3]<-str_split(ccc[4,2], " ")[[1]][2] ;
#str(data.ccc)
Clay.data<-data.frame(as.numeric(t(data.ccc)[,2]),as.numeric(t(data.ccc)[,3]))  ;
Clay.data$Sample<-t(data.ccc)[,1] ;
names(Clay.data)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
########### combine the data together ##################
Texture.data<-merge(merge(Sand.data, Silt.data),Clay.data) ;
Texture.data.0<-Texture.data  ;
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
#ALPP.Texture<-Texture.data
rm(Texture.data , Texture.data.0)
}
ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[3]]
sss<-ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[2]]
sss
i=33
Texture.data.0<-ALPP.Texture   ;
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', i, '.pdf'), pages=c(127:137) ) ;
########## Extract the Sand Data Summary ########################
sss<-ALPP.Tables[grepl('(SubTestCode 189)',ALPP.Tables)][[2]] ;
data.sss<-data.frame(sss[2:4,2:4], stringsAsFactors = F) ;
data.sss$X4<-str_split(sss[2,1], " ")[[1]][1] ;
data.sss$X4[2]<-str_split(sss[3,1], " ")[[1]][3] ;
data.sss$X4[3]<-str_split(sss[4,1], " ")[[1]][4] ;
sss
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###### Introduction to Web Scraping #####
# Preliminaries
rm(list = ls())
# Set your working directory to some place you can find
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
# First we will need to install the packages we plan to use for this exercise (
# if they are not already installed on your computer).
# install.packages("httr", dependencies = TRUE)
# install.packages("stringr", dependencies = TRUE)
# install.packages('tabulizer', dependencies = TRUE)
# install.packages('stringi', dependencies = TRUE)
# httr is a package for downloading html
library(httr)
# A package for manipulating strings
library(stringr)
library(stringi)
dir.create("../ALPP_PDFs");
# for (i in seq(30,34)) {
#   download.file(paste0('https://www.collaborativetesting.com/assets/news/', i ,'_WebSum.pdf'), destfile= paste0('../ALPP_PDFs/','ALLP', i, '.pdf'), mode = 'wb' )
#
# }
library(tabulizer)
library(dplyr)
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', 22, '.pdf'),pages=c(125:127)) ;
Texture.data.0<-ALPP.Texture
sss<-ALPP.Tables[[1]];
Median.row<-which(sss[,1] == "Grand Median") ;
MAD.row<-which(sss[,1] == "Median Abs Dev") ;
Sample.ID<-c('SRS1311' , 'SRS1312', 'SRS1313' ,  'SRS1314' , 'SRS1315') ;
data.sss<-data.frame(as.numeric(sss[Median.row,which(!is.na(as.numeric(sss[Median.row,])))]), as.numeric(sss[MAD.row,which(!is.na(as.numeric(sss[MAD.row,])))]))
str(data.sss)
data.sss$Sample<-Sample.ID  ;
names(data.sss)[1:2]<-c('Sand_Mean','Sand_MAD' ) ;
lll<-ALPP.Tables[[2]];
Median.row<-which(lll[,1] == "Grand Median") ;
MAD.row<-which(lll[,1] == "Median Abs Dev") ;
data.lll<-data.frame(as.numeric(lll[Median.row,which(!is.na(as.numeric(lll[Median.row,])))]), as.numeric(lll[MAD.row,which(!is.na(as.numeric(lll[MAD.row,])))]))
str(data.lll)
data.lll$Sample<-Sample.ID  ;
names(data.lll)[1:2]<-c('Silt_Mean' , 'Silt_MAD' ) ;
ccc<-ALPP.Tables[[3]];
Median.row<-which(ccc[,1] == "Grand Median") ;
MAD.row<-which(ccc[,1] == "Median Abs Dev") ;
data.ccc<-data.frame(as.numeric(ccc[Median.row,which(!is.na(as.numeric(ccc[Median.row,])))]), as.numeric(ccc[MAD.row,which(!is.na(as.numeric(ccc[MAD.row,])))]))
str(data.ccc)
data.ccc$Sample<-Sample.ID  ;
names(data.ccc)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Texture.data<-merge(merge(data.sss, data.lll),data.ccc) ;
Texture.data.0<-Texture.data  ;
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
ALPP.Texture
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###### Introduction to Web Scraping #####
# Preliminaries
rm(list = ls())
# Set your working directory to some place you can find
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
# First we will need to install the packages we plan to use for this exercise (
# if they are not already installed on your computer).
# install.packages("httr", dependencies = TRUE)
# install.packages("stringr", dependencies = TRUE)
# install.packages('tabulizer', dependencies = TRUE)
# install.packages('stringi', dependencies = TRUE)
# httr is a package for downloading html
library(httr)
# A package for manipulating strings
library(stringr)
library(stringi)
dir.create("../ALPP_PDFs");
library(tabulizer)
library(dplyr)
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', 20, '.pdf'),pages=c(125:127)) ;
Texture.data.0<-ALPP.Texture
sss<-ALPP.Tables[[1]];
Median.row<-which(sss[,1] == "Grand Median") ;
MAD.row<-which(sss[,1] == "Median Abs Dev") ;
Sample.ID<-c('SRS1311' , 'SRS1312', 'SRS1313' ,  'SRS1314' , 'SRS1315') ;
data.sss<-data.frame(as.numeric(sss[Median.row,which(!is.na(as.numeric(sss[Median.row,])))]), as.numeric(sss[MAD.row,which(!is.na(as.numeric(sss[MAD.row,])))]))
str(data.sss)
data.sss$Sample<-Sample.ID  ;
names(data.sss)[1:2]<-c('Sand_Mean','Sand_MAD' ) ;
lll<-ALPP.Tables[[2]];
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', 20, '.pdf'),pages=c(113:115)) ;
Texture.data.0<-ALPP.Texture
sss<-ALPP.Tables[[1]];
Median.row<-which(sss[,1] == "Grand Median") ;
MAD.row<-which(sss[,1] == "Median Abs Dev") ;
Sample.ID<-c('SRS1311' , 'SRS1312', 'SRS1313' ,  'SRS1314' , 'SRS1315') ;
Sample.ID<-c('SRS1301' , 'SRS1302', 'SRS1303' ,  'SRS1304' , 'SRS1305') ;
data.sss<-data.frame(as.numeric(sss[Median.row,which(!is.na(as.numeric(sss[Median.row,])))]), as.numeric(sss[MAD.row,which(!is.na(as.numeric(sss[MAD.row,])))]))
str(data.sss)
data.sss$Sample<-Sample.ID  ;
names(data.sss)[1:2]<-c('Sand_Mean','Sand_MAD' ) ;
data.sss
lll<-ALPP.Tables[[2]];
Median.row<-which(lll[,1] == "Grand Median") ;
MAD.row<-which(lll[,1] == "Median Abs Dev") ;
data.lll<-data.frame(as.numeric(lll[Median.row,which(!is.na(as.numeric(lll[Median.row,])))]), as.numeric(lll[MAD.row,which(!is.na(as.numeric(lll[MAD.row,])))]))
str(data.lll)
data.lll$Sample<-Sample.ID  ;
names(data.lll)[1:2]<-c('Silt_Mean' , 'Silt_MAD' ) ;
data.lll
ccc<-ALPP.Tables[[3]];
Median.row<-which(ccc[,1] == "Grand Median") ;
MAD.row<-which(ccc[,1] == "Median Abs Dev") ;
data.ccc<-data.frame(as.numeric(ccc[Median.row,which(!is.na(as.numeric(ccc[Median.row,])))]), as.numeric(ccc[MAD.row,which(!is.na(as.numeric(ccc[MAD.row,])))]))
str(data.ccc)
data.ccc$Sample<-Sample.ID  ;
names(data.ccc)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Texture.data<-merge(merge(data.sss, data.lll),data.ccc) ;
Texture.data.0<-Texture.data  ;
Texture.data
ALPP.Texture
ALPP.Texture<-Texture.data
rm(Texture.data , Texture.data.0)
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', 22, '.pdf'),pages=c(113:115)) ;
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', 22, '.pdf'),pages=c(125:127)) ;
Texture.data.0<-ALPP.Texture
sss<-ALPP.Tables[[1]];
Median.row<-which(sss[,1] == "Grand Median") ;
MAD.row<-which(sss[,1] == "Median Abs Dev") ;
Sample.ID<-c('SRS1301' , 'SRS1302', 'SRS1303' ,  'SRS1304' , 'SRS1305') ;
data.sss<-data.frame(as.numeric(sss[Median.row,which(!is.na(as.numeric(sss[Median.row,])))]), as.numeric(sss[MAD.row,which(!is.na(as.numeric(sss[MAD.row,])))]))
str(data.sss)
data.sss$Sample<-Sample.ID  ;
names(data.sss)[1:2]<-c('Sand_Mean','Sand_MAD' ) ;
lll<-ALPP.Tables[[2]];
Median.row<-which(lll[,1] == "Grand Median") ;
MAD.row<-which(lll[,1] == "Median Abs Dev") ;
data.lll<-data.frame(as.numeric(lll[Median.row,which(!is.na(as.numeric(lll[Median.row,])))]), as.numeric(lll[MAD.row,which(!is.na(as.numeric(lll[MAD.row,])))]))
str(data.lll)
data.lll$Sample<-Sample.ID  ;
names(data.lll)[1:2]<-c('Silt_Mean' , 'Silt_MAD' ) ;
ccc<-ALPP.Tables[[3]];
Median.row<-which(ccc[,1] == "Grand Median") ;
MAD.row<-which(ccc[,1] == "Median Abs Dev") ;
data.ccc<-data.frame(as.numeric(ccc[Median.row,which(!is.na(as.numeric(ccc[Median.row,])))]), as.numeric(ccc[MAD.row,which(!is.na(as.numeric(ccc[MAD.row,])))]))
str(data.ccc)
data.ccc$Sample<-Sample.ID  ;
names(data.ccc)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Texture.data<-merge(merge(data.sss, data.lll),data.ccc) ;
Texture.data.0<-Texture.data  ;
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
rm(Texture.data , Texture.data.0)
sss<-ALPP.Tables[[1]];
Median.row<-which(sss[,1] == "Grand Median") ;
MAD.row<-which(sss[,1] == "Median Abs Dev") ;
Sample.ID<-c('SRS1311' , 'SRS1312', 'SRS1313' ,  'SRS1314' , 'SRS1315') ;
data.sss<-data.frame(as.numeric(sss[Median.row,which(!is.na(as.numeric(sss[Median.row,])))]), as.numeric(sss[MAD.row,which(!is.na(as.numeric(sss[MAD.row,])))]))
str(data.sss)
data.sss$Sample<-Sample.ID  ;
names(data.sss)[1:2]<-c('Sand_Mean','Sand_MAD' ) ;
lll<-ALPP.Tables[[2]];
Median.row<-which(lll[,1] == "Grand Median") ;
MAD.row<-which(lll[,1] == "Median Abs Dev") ;
data.lll<-data.frame(as.numeric(lll[Median.row,which(!is.na(as.numeric(lll[Median.row,])))]), as.numeric(lll[MAD.row,which(!is.na(as.numeric(lll[MAD.row,])))]))
str(data.lll)
data.lll$Sample<-Sample.ID  ;
names(data.lll)[1:2]<-c('Silt_Mean' , 'Silt_MAD' ) ;
ccc<-ALPP.Tables[[3]];
Median.row<-which(ccc[,1] == "Grand Median") ;
MAD.row<-which(ccc[,1] == "Median Abs Dev") ;
data.ccc<-data.frame(as.numeric(ccc[Median.row,which(!is.na(as.numeric(ccc[Median.row,])))]), as.numeric(ccc[MAD.row,which(!is.na(as.numeric(ccc[MAD.row,])))]))
str(data.ccc)
data.ccc$Sample<-Sample.ID  ;
names(data.ccc)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Texture.data<-merge(merge(data.sss, data.lll),data.ccc) ;
Texture.data.0<-Texture.data  ;
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
ALPP.Texture
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###### Introduction to Web Scraping #####
# Preliminaries
rm(list = ls())
# Set your working directory to some place you can find
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
# First we will need to install the packages we plan to use for this exercise (
# if they are not already installed on your computer).
# install.packages("httr", dependencies = TRUE)
# install.packages("stringr", dependencies = TRUE)
# install.packages('tabulizer', dependencies = TRUE)
# install.packages('stringi', dependencies = TRUE)
# httr is a package for downloading html
library(httr)
# A package for manipulating strings
library(stringr)
library(stringi)
dir.create("../ALPP_PDFs");
# for (i in seq(30,34)) {
#   download.file(paste0('https://www.collaborativetesting.com/assets/news/', i ,'_WebSum.pdf'), destfile= paste0('../ALPP_PDFs/','ALLP', i, '.pdf'), mode = 'wb' )
#
# }
library(tabulizer)
library(dplyr)
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', 22, '.pdf'),pages=c(125:127)) ;
Sample.ID<-c('SRS1311' , 'SRS1312', 'SRS1313' ,  'SRS1314' , 'SRS1315') ;
Texture.data.0<-ALPP.Texture
sss<-ALPP.Tables[[1]];
Median.row<-which(sss[,1] == "Grand Median") ;
MAD.row<-which(sss[,1] == "Median Abs Dev") ;
data.sss<-data.frame(as.numeric(sss[Median.row,which(!is.na(as.numeric(sss[Median.row,])))]), as.numeric(sss[MAD.row,which(!is.na(as.numeric(sss[MAD.row,])))]))
str(data.sss)
data.sss$Sample<-Sample.ID  ;
names(data.sss)[1:2]<-c('Sand_Mean','Sand_MAD' ) ;
lll<-ALPP.Tables[[2]];
Median.row<-which(lll[,1] == "Grand Median") ;
MAD.row<-which(lll[,1] == "Median Abs Dev") ;
data.lll<-data.frame(as.numeric(lll[Median.row,which(!is.na(as.numeric(lll[Median.row,])))]), as.numeric(lll[MAD.row,which(!is.na(as.numeric(lll[MAD.row,])))]))
str(data.lll)
data.lll$Sample<-Sample.ID  ;
names(data.lll)[1:2]<-c('Silt_Mean' , 'Silt_MAD' ) ;
ccc<-ALPP.Tables[[3]];
Median.row<-which(ccc[,1] == "Grand Median") ;
MAD.row<-which(ccc[,1] == "Median Abs Dev") ;
data.ccc<-data.frame(as.numeric(ccc[Median.row,which(!is.na(as.numeric(ccc[Median.row,])))]), as.numeric(ccc[MAD.row,which(!is.na(as.numeric(ccc[MAD.row,])))]))
str(data.ccc)
data.ccc$Sample<-Sample.ID  ;
names(data.ccc)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Texture.data<-merge(merge(data.sss, data.lll),data.ccc) ;
Texture.data<-merge(merge(data.sss, data.lll),data.ccc) ;
Texture.data
ALPP.Texture
ALPP.Texture<-Texture.data
ALPP.Texture
rm(Texture.data , Texture.data.0)
ALPP.Tables <- extract_tables(paste0('../ALPP_PDFs/','ALLP', 20, '.pdf'),pages=c(113:115)) ;
Sample.ID<-c('SRS1301' , 'SRS1302', 'SRS1303' ,  'SRS1304' , 'SRS1305') ;
Texture.data.0<-ALPP.Texture
sss<-ALPP.Tables[[1]];
Median.row<-which(sss[,1] == "Grand Median") ;
MAD.row<-which(sss[,1] == "Median Abs Dev") ;
data.sss<-data.frame(as.numeric(sss[Median.row,which(!is.na(as.numeric(sss[Median.row,])))]), as.numeric(sss[MAD.row,which(!is.na(as.numeric(sss[MAD.row,])))]))
str(data.sss)
data.sss$Sample<-Sample.ID  ;
names(data.sss)[1:2]<-c('Sand_Mean','Sand_MAD' ) ;
lll<-ALPP.Tables[[2]];
Median.row<-which(lll[,1] == "Grand Median") ;
MAD.row<-which(lll[,1] == "Median Abs Dev") ;
data.lll<-data.frame(as.numeric(lll[Median.row,which(!is.na(as.numeric(lll[Median.row,])))]), as.numeric(lll[MAD.row,which(!is.na(as.numeric(lll[MAD.row,])))]))
str(data.lll)
data.lll$Sample<-Sample.ID  ;
names(data.lll)[1:2]<-c('Silt_Mean' , 'Silt_MAD' ) ;
ccc<-ALPP.Tables[[3]];
Median.row<-which(ccc[,1] == "Grand Median") ;
MAD.row<-which(ccc[,1] == "Median Abs Dev") ;
data.ccc<-data.frame(as.numeric(ccc[Median.row,which(!is.na(as.numeric(ccc[Median.row,])))]), as.numeric(ccc[MAD.row,which(!is.na(as.numeric(ccc[MAD.row,])))]))
str(data.ccc)
data.ccc$Sample<-Sample.ID  ;
names(data.ccc)[1:2]<-c('Clay_Mean' , 'Clay_MAD') ;
Texture.data
Texture.data<-merge(merge(data.sss, data.lll),data.ccc) ;
Texture.data
ALPP.Texture<-rbind(Texture.data.0,Texture.data)  ;
ALPP.Texture
rm(Texture.data , Texture.data.0)
View(ALPP.Texture)
View(ALPP.Texture)
