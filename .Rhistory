tri.sum.tst        =F,
pch                = 21,
bg                 ="BLACK",
cex                = 1.5,
lwd                = 1.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[11,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="WHITE",
cex                = 1.5,
lwd                = 3.0
)
TT.text(
tri.data           = Comparing.Samples[15,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[15,"SAMPLE"],
pos                = 4,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[6,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[6,"SAMPLE"],
pos                = 2,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[11,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[11,"SAMPLE"],
pos                = 3,
cex                = 0.8,
offset             = 0.4,
font               =2
)
dev.off()
# #par(mfrow=c(2,1))
#
# #initilaizing the horizontal bar plot with the first scaled LD results
#
# # par(fig = c(0,1,0,1))
# # par(plt=c(0.1,0.9,0.2,0.9))
#
# # par(mar= c(5.1 4.1 4.1 2.1))
#
par(mar= c(5.1, 4.1, 2.1, 5.1))
barplot( height=t(ScaledLD.data[,c(19,8,13)]), beside=T,col=c('GREY50', 'BLACK', 'WHITE'), names.arg=SizeLabels[seq(1,74)], ylim=c(0,0.04), cex.names =1, cex.axis=1.0, cex.lab= 1.2, ylab="Particle Size Fraction", xlab=expression(paste("Particle size (", mu, "m)")), space=c(0,0.1),las=2, lwd=2)
text(182,0.038, "SILT", col="BLACK", cex=1.0)
text(120,0.038, "CLAY", col="BLACK", cex=1.0)
#text(5,0.038, "B)")
abline(v=157,lty=2, col="BLACK", lwd=7)
par(fig = c(0.12, 0.36, 0.50 , 0.98), new=T)
par(mar= c(5.1, 4.1, 4.1, 2.1))
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[15,],
#css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
frame.bg.col       ="WHITE",
pch                =19,
col                = "RED",
cex                = 1.5,
lwd                = 1.5,
cex.axis           = 1.0,
lwd.axis           = 2.5,
lwd.lab            = 1.0,
arrows.show        = F,
grid.col           = 'GREY75',
class.line.col     = 'BLACK',
#cex.lab            =0.8
class.lab.show     ='none'
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[6,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="BLACK",
cex                = 1.5,
lwd                = 1.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[11,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="WHITE",
cex                = 1.5,
lwd                = 3.0
)
TT.text(
tri.data           = Comparing.Samples[15,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[15,"SAMPLE"],
pos                = 4,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[6,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[6,"SAMPLE"],
pos                = 2,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[11,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[11,"SAMPLE"],
pos                = 3,
cex                = 0.8,
offset             = 0.4,
font               =2
)
tiff(filename=paste0("../Manuscript/Figures/HorizontalDist_REV2",".tiff"), width=5760 , height=3840, pointsize = 80)
# #par(mfrow=c(2,1))
#
# #initilaizing the horizontal bar plot with the first scaled LD results
#
# # par(fig = c(0,1,0,1))
# # par(plt=c(0.1,0.9,0.2,0.9))
#
# # par(mar= c(5.1 4.1 4.1 2.1))
#
par(mar= c(5.1, 4.1, 2.1, 5.1))
# par(lwd=3)
#
#
# # barplot( height=t(ScaledLD.data[,c(27,15,25)]), beside=T, col= c('GREEN','BLACK', 'BLUE' ), names.arg=SizeLabels[seq(1,74)], axisnames= F, ylim=c(0,0.04), cex.names =0.5, cex.axis=0.5, cex.lab= 0.7, ylab="Particle Size Fraction", xlab=NA, space=c(0,0.15),las=2,lwd=1.1)
#
# barplot( height=t(ScaledLD.data[,c(27,15,25)]), beside=T, col=c('GREY50', 'WHITE','BLACK'),names.arg=SizeLabels[seq(1,74)], axisnames= F, ylim=c(0,0.04), cex.names =0.6, cex.axis=0.8, cex.lab= 0.8, ylab="Particle Size Fraction", xlab=NA, space=c(0,0.1),las=2, lwd=2)
#
#
#
#
# text(182,0.038, "SILT", col="BLACK", cex=0.8)
#
# text(120,0.038, "CLAY", col="BLACK", cex=0.8)
#
# text(5,0.038, "A)")
#
# abline(v=157,lty=2, col="BLACK", lwd=7)
#
# par(mar= c(4.1, 4.1, 0, 2.1))
#
# barplot( height=t(ScaledLD.data[,c(19,8,13)]), beside=T, col= c('BLACK','GREEN', 'BLUE'), names.arg=SizeLabels[seq(1,74)], ylim=c(0,0.04), cex.names =0.5, cex.axis=0.5, cex.lab= 0.7, ylab="Particle Size Fraction", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
barplot( height=t(ScaledLD.data[,c(19,8,13)]), beside=T,col=c('RED', 'BLACK', 'WHITE'), names.arg=SizeLabels[seq(1,74)], ylim=c(0,0.04), cex.names =1, cex.axis=1.0, cex.lab= 1.2, ylab="Particle Size Fraction", xlab=expression(paste("Particle size (", mu, "m)")), space=c(0,0.1),las=2, lwd=2)
text(182,0.038, "SILT", col="BLACK", cex=1.0)
text(120,0.038, "CLAY", col="BLACK", cex=1.0)
#text(5,0.038, "B)")
abline(v=157,lty=2, col="BLACK", lwd=7)
# ##################################  insert Texture picture in first panel ######################
#
# #par(fig = c(0.12, 0.35, 0.62, 0.98 ), new=T)
#
# par(fig = c(0.12, 0.40, 0.60, 1.0 ), new=T)
#
# par(mar= c(5.1, 4.1, 4.1, 2.1))
#
# # barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
# TT.plot(
#   class.sys          ="USDA-NCSS.TT",
#   main               =NA,
#   tri.data           = Comparing.Samples[10,],
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   frame.bg.col       = 'WHITE', #"gray75",
#   pch                =19,
#   # bg                 = "WHITE",
#   col                ="GREY50",
#   cex                = 1,
#   lwd                = 1.5,
#   cex.axis           = 0.5,
#   col.axis           ='BLACK',
#   lwd.axis           = 0.8,
#   lwd.lab            = 0.8,
#   cex.lab            = 0.5,
#   class.lab.show     ='none'
# )
#
#
# TT.points(
#   geo.ALLP,
#   tri.data           = Comparing.Samples[9,],
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   pch                = 21,
#   bg                 ="WHITE",
#   cex                = 1,
#   lwd                = 1.5
# )
#
#
#
# TT.points(
#   geo.ALLP,
#   tri.data           = Comparing.Samples[14,],
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   pch                = 21,
#   bg                 ="BLACK",
#   cex                = 1,
#   lwd                = 0.7
# )
#
# Comparing.Samples[14,"SAMPLE"]<-c('SRS1604') ;
#
# TT.text(
#   tri.data           = Comparing.Samples[c(10,9,14),],
#   geo                = geo.ALLP,
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   labels             = Comparing.Samples[c(10,9,14),"SAMPLE"],
#   pos                = 3,
#   cex                = 0.6,
#   offset             = 0.2,
#   font               =2
# )
##################################  insert Texture picture in second panel ######################
# par(fig = c(0.12, 0.35, 0.18, 0.54 ), new=T)
par(fig = c(0.12, 0.36, 0.50 , 0.98), new=T)
par(mar= c(5.1, 4.1, 4.1, 2.1))
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[15,],
#css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
frame.bg.col       ="WHITE",
pch                =19,
col                = "RED",
cex                = 1.5,
lwd                = 1.5,
cex.axis           = 1.0,
lwd.axis           = 2.5,
lwd.lab            = 1.0,
arrows.show        = F,
grid.col           = 'GREY75',
class.line.col     = 'BLACK',
#cex.lab            =0.8
class.lab.show     ='none'
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[6,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="BLACK",
cex                = 1.5,
lwd                = 1.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[11,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="WHITE",
cex                = 1.5,
lwd                = 3.0
)
TT.text(
tri.data           = Comparing.Samples[15,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[15,"SAMPLE"],
pos                = 4,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[6,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[6,"SAMPLE"],
pos                = 2,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[11,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[11,"SAMPLE"],
pos                = 3,
cex                = 0.8,
offset             = 0.4,
font               =2
)
dev.off()
geo.ALLP<-TT.plot(
class.sys          ="USDA-NCSS.TT",
frame.bg.col       ="gray75",
bg                 ="white"
)
tiff(filename=paste0("../Manuscript/Figures/HorizontalDist_REV3",".tiff"), width=5760 , height=3840, pointsize = 80)
# #par(mfrow=c(2,1))
#
# #initilaizing the horizontal bar plot with the first scaled LD results
#
# # par(fig = c(0,1,0,1))
# # par(plt=c(0.1,0.9,0.2,0.9))
#
# # par(mar= c(5.1 4.1 4.1 2.1))
#
par(mar= c(5.1, 4.1, 2.1, 5.1))
# par(lwd=3)
#
#
# # barplot( height=t(ScaledLD.data[,c(27,15,25)]), beside=T, col= c('GREEN','BLACK', 'BLUE' ), names.arg=SizeLabels[seq(1,74)], axisnames= F, ylim=c(0,0.04), cex.names =0.5, cex.axis=0.5, cex.lab= 0.7, ylab="Particle Size Fraction", xlab=NA, space=c(0,0.15),las=2,lwd=1.1)
#
# barplot( height=t(ScaledLD.data[,c(27,15,25)]), beside=T, col=c('GREY50', 'WHITE','BLACK'),names.arg=SizeLabels[seq(1,74)], axisnames= F, ylim=c(0,0.04), cex.names =0.6, cex.axis=0.8, cex.lab= 0.8, ylab="Particle Size Fraction", xlab=NA, space=c(0,0.1),las=2, lwd=2)
#
#
#
#
# text(182,0.038, "SILT", col="BLACK", cex=0.8)
#
# text(120,0.038, "CLAY", col="BLACK", cex=0.8)
#
# text(5,0.038, "A)")
#
# abline(v=157,lty=2, col="BLACK", lwd=7)
#
# par(mar= c(4.1, 4.1, 0, 2.1))
#
# barplot( height=t(ScaledLD.data[,c(19,8,13)]), beside=T, col= c('BLACK','GREEN', 'BLUE'), names.arg=SizeLabels[seq(1,74)], ylim=c(0,0.04), cex.names =0.5, cex.axis=0.5, cex.lab= 0.7, ylab="Particle Size Fraction", xlab=expression(paste("Equivalent particle size ( ", mu, "m)")), space=c(0,0.1),las=2)
barplot( height=t(ScaledLD.data[,c(19,8,13)]), beside=T,col=c('RED', 'BLACK', 'WHITE'), names.arg=SizeLabels[seq(1,74)], ylim=c(0,0.04), cex.names =1, cex.axis=1.0, cex.lab= 1.2, ylab="Particle Size Fraction", xlab=expression(paste("Particle size (", mu, "m)")), space=c(0,0.1),las=2, lwd=2)
text(182,0.038, "SILT", col="BLACK", cex=1.0)
text(120,0.038, "CLAY", col="BLACK", cex=1.0)
#text(5,0.038, "B)")
abline(v=157,lty=2, col="BLACK", lwd=7)
# ##################################  insert Texture picture in first panel ######################
#
# #par(fig = c(0.12, 0.35, 0.62, 0.98 ), new=T)
#
# par(fig = c(0.12, 0.40, 0.60, 1.0 ), new=T)
#
# par(mar= c(5.1, 4.1, 4.1, 2.1))
#
# # barplot(height=ScaledLD.data[,18], width=rep(1.4,74), space=0.2, col=rgb(0,1,0,0.6), horiz = T,las=1,add=T)
# TT.plot(
#   class.sys          ="USDA-NCSS.TT",
#   main               =NA,
#   tri.data           = Comparing.Samples[10,],
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   frame.bg.col       = 'WHITE', #"gray75",
#   pch                =19,
#   # bg                 = "WHITE",
#   col                ="GREY50",
#   cex                = 1,
#   lwd                = 1.5,
#   cex.axis           = 0.5,
#   col.axis           ='BLACK',
#   lwd.axis           = 0.8,
#   lwd.lab            = 0.8,
#   cex.lab            = 0.5,
#   class.lab.show     ='none'
# )
#
#
# TT.points(
#   geo.ALLP,
#   tri.data           = Comparing.Samples[9,],
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   pch                = 21,
#   bg                 ="WHITE",
#   cex                = 1,
#   lwd                = 1.5
# )
#
#
#
# TT.points(
#   geo.ALLP,
#   tri.data           = Comparing.Samples[14,],
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   pch                = 21,
#   bg                 ="BLACK",
#   cex                = 1,
#   lwd                = 0.7
# )
#
# Comparing.Samples[14,"SAMPLE"]<-c('SRS1604') ;
#
# TT.text(
#   tri.data           = Comparing.Samples[c(10,9,14),],
#   geo                = geo.ALLP,
#   css.names          =c('CLAY', 'SILT' , 'SAND'),
#   tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#   labels             = Comparing.Samples[c(10,9,14),"SAMPLE"],
#   pos                = 3,
#   cex                = 0.6,
#   offset             = 0.2,
#   font               =2
# )
##################################  insert Texture picture in second panel ######################
# par(fig = c(0.12, 0.35, 0.18, 0.54 ), new=T)
par(fig = c(0.12, 0.36, 0.50 , 0.98), new=T)
par(mar= c(5.1, 4.1, 4.1, 2.1))
TT.plot(
class.sys          ="USDA-NCSS.TT",
main               =NA,
tri.data           = Comparing.Samples[15,],
#css.names          =c('CLAY_Norm' , 'SILT_Norm' , 'SAND_Norm'),
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
frame.bg.col       ="WHITE",
pch                =19,
col                = "RED",
cex                = 1.5,
lwd                = 1.5,
cex.axis           = 1.0,
lwd.axis           = 2.5,
lwd.lab            = 1.0,
arrows.show        = F,
grid.col           = 'GREY75',
class.line.col     = 'BLACK',
#cex.lab            =0.8
class.lab.show     ='none'
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[6,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="BLACK",
cex                = 1.5,
lwd                = 1.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[11,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="WHITE",
cex                = 1.5,
lwd                = 3.0
)
TT.text(
tri.data           = Comparing.Samples[15,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[15,"SAMPLE"],
pos                = 4,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[6,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[6,"SAMPLE"],
pos                = 2,
cex                = 0.8,
offset             = 0.4,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[11,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[11,"SAMPLE"],
pos                = 3,
cex                = 0.8,
offset             = 0.4,
font               =2
)
dev.off()
