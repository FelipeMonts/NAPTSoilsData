tri.sum.tst        =F,
pch                = 21,
bg                 ="GREEN",
cex                = 0.5,
lwd                = 0.5
)
TT.points(
geo.ALLP,
tri.data           = Comparing.Samples[9,],
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
pch                = 21,
bg                 ="BLUE",
cex                = 0.5,
lwd                = 0.5
)
TT.text(
tri.data           = Comparing.Samples[8,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[8,"SAMPLE"],
pos                = 4,
cex                = 0.4,
offset             = 0.2,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[9,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[9,"SAMPLE"],
pos                = 2,
cex                = 0.4,
offset             = 0.2,
font               =2
)
TT.text(
tri.data           = Comparing.Samples[10,],
geo                = geo.ALLP,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F,
labels             = Comparing.Samples[10,"SAMPLE"],
pos                = 3,
cex                = 0.4,
offset             = 0.2,
font               =2
)
NAPT
TT.plot(
#geo.ALLP,
class.sys          ="USDA-NCSS.TT",
main               ="Texture data for the NAPT, ALP and selected soil samples",
tri.data           = NAPT,
css.names          =c('CLAY.1', 'SILT.1' , 'SAND.1'),
tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#main               ="NAPT Texture Data",
pch                = 24,
bg                 ="white",
col                ="black",
cex                = 1.5,
lwd                = 0.5,
frame.bg.col       ="gray75"
)
ALLP.norm
ALLP
TT.points(
geo.ALLP,
tri.data           = ALLP,
css.names          =c('CLAY.1', 'SILT.1' , 'SAND.1'),
tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#class.p.bg.col     =T,
pch                = 25,
bg                 ="grey50",
col                ="black",
cex                = 1.5,
lwd                = 0.5
)
Paper.Samples
TT.points(
geo.ALLP,
tri.data           = Paper.Samples,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
pch                =21,
bg                 ="RED",
col                ="black",
cex                = 1.2,
lwd                = 1
)
ALLP
Selected_Samples
TT.plot(
#geo.ALLP,
class.sys          ="USDA-NCSS.TT",
main               ="Texture data for the NAPT, ALP and selected soil samples",
tri.data           = NAPT,
css.names          =c('CLAY.1', 'SILT.1' , 'SAND.1'),
tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#main               ="NAPT Texture Data",
pch                = 24,
bg                 ="white",
col                ="black",
cex                = 1.5,
lwd                = 0.5,
frame.bg.col       ="gray75"
)
TT.points(
geo.ALLP,
tri.data           = Paper.Samples,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
pch                =21,
bg                 ="RED",
col                ="black",
cex                = 1.2,
lwd                = 1
)
ALLP
NAPT
Paper.Samples
View(Paper.Samples)
names(LassDiff.1)
strsplit(names(LassDiff.1)," ")
sapply(strsplit(names(LassDiff.1)," "), "[",2)
strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5")
sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1)
LDRunSamples<-sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1) ;
NAPT
which(NAPT$SAMPLE %in% LDRunSamples)
NAPT[which(NAPT$SAMPLE %in% LDRunSamples),'SAMPLE']
NAPT[which(NAPT$SAMPLE %in% LDRunSamples),]
NAPT
LDRunSamples
na.omit(LDRunSamples)
LDRunSamples<-na.omit(sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1))) ;
na.omit(sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1))
LDRunSamples<-na.omit(sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1)) ;
str(LDRunSamples)
LDRunSamples<-sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1) ;
LDRunSamples.Not_NA<-LDRunSamples[!is.na(LDRunSamples)]
LDRunSamples.Not_NA
LDRunSamples.Not_NA[-c("14","1","7")]
LDRunSamples.Not_NA[1:51]
NAPT[which(NAPT$SAMPLE %in% LDRunSamples.Not_NA),]
NAPT[which(NAPT$SAMPLE %in% LDRunSamples.Not_NA),]
match(NAPT$SAMPLE,LDRunSamples.Not_NA[1:51] )
NAPT
LDRunSamples<-LDRunSamples[!is.na(LDRunSamples)] [1:51];
LDRunSamples
LDRunSamples.all<-sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1) ;
LDRunSamples<-LDRunSamples[!is.na(LDRunSamples)] [1:51];
LDRunSamples
match(LDRunSamples,NAPT$SAMPLE)
LDRunSamples[match(LDRunSamples,NAPT$SAMPLE)]
match(LDRunSamples,NAPT$SAMPLE)
match(NAPT$SAMPLE,LDRunSamples)
!is.na(match(NAPT$SAMPLE,LDRunSamples))
na.omit(match(NAPT$SAMPLE,LDRunSamples))
LDRunSamples[na.omit(match(NAPT$SAMPLE,LDRunSamples))]
LDRunSamples[na.omit(match(NAPT$SAMPLE,LDRunSamples)),]
!is.na(match(NAPT$SAMPLE,LDRunSamples))
NAPT[!is.na(match(NAPT$SAMPLE,LDRunSamples)),]
data.frame(LDRunSamples,c("Pipette"))
data.frame(LDRunSamples,c("Pipette"),c("Hydrometer")
data.frame(LDRunSamples,c("Pipette"),c("Hydrometer"))
data.frame(LDRunSamples,c("Pipette"),c("Hydrometer"))
LDRunSamples.Not_NA<-LDRunSamples.all[!is.na(LDRunSamples)] [1:51];
LDRunSamples<-data.frame(LDRunSamples,c("Pipette"),c("Hydrometer"))  ;
LDRunSamples[,1:2]
match(LDRunSamples[,1:2],NAPT[,c("SAMPLE", "ANALYSIS")])
paste(NAPT$SAMPLE,NAPT$ANALYSIS),sep="-")
paste(NAPT$SAMPLE,NAPT$ANALYSIS,sep="-")
match(paste(NAPT$SAMPLE,NAPT$ANALYSIS,sep="-"), paste(LDRunSamples$LDRunSamples, LDRunSamples$c..Pipette..,sep"-"))
match(paste(NAPT$SAMPLE,NAPT$ANALYSIS,sep="-"), paste(LDRunSamples$LDRunSamples, LDRunSamples$c..Pipette..,sep="-"))
match(paste(NAPT$SAMPLE,NAPT$ANALYSIS,sep="-"), paste(LDRunSamples$LDRunSamples, LDRunSamples$c..Hydrometer..,sep="-"))
LDRunSamples.Not_NA
LDRunSamples.all<-sapply(strsplit(sapply(strsplit(names(LassDiff.1)," "), "[",2), "-5"), '[',1) ;
LDRunSamples.Not_NA<-LDRunSamples.all[!is.na(LDRunSamples)] [1:51];
LDRunSamples<-data.frame(LDRunSamples.Not_NA,c("Pipette"),c("Hydrometer"))  ;
LDRunSamples.Not_NA
NAPT
View(NAPT)
View(NAPT)
NPAT[NAPT$SAMPLE="2017-108",]
NPAT[whitch(NAPT$SAMPLE="2017-108"),]
NPAT[which(NAPT$SAMPLE="2017-108"),]
NPAT[which(NAPT$SAMPLE="2017-108"),]
which(NAPT$SAMPLE=="2017-108",arr.ind = T)
Paper.Samples<-readWorksheetFromFile("Results_data_all.xlsx", sheet="Selected_Final",startCol= 1, endCol=10) ;
Paper.Samples
TT.plot(
#geo.ALLP,
class.sys          ="USDA-NCSS.TT",
main               ="Texture data for the NAPT, ALP and selected soil samples",
tri.data           = NAPT,
css.names          =c('CLAY.1', 'SILT.1' , 'SAND.1'),
tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
#main               ="NAPT Texture Data",
pch                = 24,
bg                 ="white",
col                ="black",
cex                = 1.5,
lwd                = 0.5,
frame.bg.col       ="gray75"
)
TT.points(
geo.ALLP,
tri.data           = Paper.Samples,
css.names          =c('CLAY', 'SILT' , 'SAND'),
tri.sum.tst        =F, # allows toplot texture fraction that do not all to 100 as in the NAPT and ALP databases
pch                =21,
bg                 ="RED",
col                ="black",
cex                = 1.2,
lwd                = 1
)
NAPT
View(NAPT)
View(NAPT)
NAPT.data<-readWorksheetFromFile("Results_data_all.xlsx", sheet="Combined", startRow=1, endRow=864) ;
str(NAPT.data)
head(NAPT.data)
NAPT.data.nohead<-NAPT.data[-c(1,2),] ;
head(NAPT.data.nohead)
NAPT.data.nohead$SAMPLE<-str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,1] ;
str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,1]
NAPT.data.nohead$X
str_split(NAPT.data.nohead$X, " ", simplify = T)
NAPT.data.nohead$SAMPLE<-str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,1] ;
NAPT.data.nohead$VALUE<-str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,2] ;
head(NAPT.data.nohead)
NAPT.data.nohead.n_rows<-which(NAPT.data.nohead[,1] == 'n', arr.ind = T)  ;
which(NAPT.data.nohead[,1] == 'n', arr.ind = T)
str(NAPT.data.nohead)
head(NAPT.data.nohead)
NAPT.data.Median<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'Median',]
str(NAPT.data.Median)
head(NAPT.data.Median)
NAPT.data.MAD<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'MAD',]
str(NAPT.data.MAD)
head(NAPT.data.MAD)
NAPT.data.n<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'n',]
str(NAPT.data.n)
head(NAPT.data.n)
NAPT.Texture<-merge(NAPT.data.Median,NAPT.data.MAD, by= 'SAMPLE')
str(NAPT.Texture)
head(NAPT.Texture,30)
NAPT.Texture[which(!is.na(NAPT.Texture$V4.x)),]
NAPT.Texture$ANALYSIS<-'PLACEHOLDER'  ;
NAPT.Texture<-merge(NAPT.data.Median,NAPT.data.MAD, by= 'SAMPLE')
str(NAPT.Texture)
head(NAPT.Texture,30)
NAPT.Texture$ANALYSIS<-'PLACEHOLDER'  ;
head(NAPT.Texture,30)
head(NAPT.data.nohead)
str(NAPT.data.n)
head(NAPT.data.n)
NAPT.data<-readWorksheetFromFile("Results_data_all.xlsx", sheet="Combined", startRow=1, endRow=864) ;
str(NAPT.data)
head(NAPT.data)
NAPT.data.head<-NAPT.data[c(1,2),] ;
NAPT.data.nohead<-NAPT.data[-c(1,2),] ;
head(NAPT.data.nohead)
NAPT.data.nohead$SAMPLE<-str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,1] ;
NAPT.data.nohead$VALUE<-str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,2] ;
NAPT.data.nohead.n_rows<-which(NAPT.data.nohead[,1] == 'n', arr.ind = T)  ;
head(NAPT.data.nohead)
NAPT.data.nohead.n_rows<-which(NAPT.data.nohead[,1] == 'n', arr.ind = T)  ;
NAPT.data.nohead.n_rows
NAPT.data.nohead[NAPT.data.nohead.n_rows+1, 'SAMPLE']
NAPT.data.nohead[NAPT.data.nohead.n_rows,]
NAPT.data.nohead[NAPT.data.nohead.n_rows, 'VALUE']<-NAPT.data.nohead[NAPT.data.nohead.n_rows, 'X'] ;
NAPT.data.nohead.n_rows<-which(NAPT.data.nohead[,1] == 'n', arr.ind = T)  ;
NAPT.data.nohead[NAPT.data.nohead.n_rows, 'SAMPLE']<-NAPT.data.nohead[NAPT.data.nohead.n_rows+1, 'SAMPLE'] ;
NAPT.data.nohead[NAPT.data.nohead.n_rows, 'VALUE']<-NAPT.data.nohead[NAPT.data.nohead.n_rows, 'X'] ;
str(NAPT.data.nohead)
head(NAPT.data.nohead)
NAPT.data.Median<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'Median',]
NAPT.data.n<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'n',]
NAPT.data.n
head(NAPT.data.MAD)
NAPT.Texture.Hydrometer<-merge(NAPT.data.Median[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VLAUE')],NAPT.data.MAD[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE')
NAPT.data.Median[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VLAUE')]
NAPT.data.Median[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')
]
NAPT.Texture.Hydrometer<-merge(NAPT.data.Median[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')],NAPT.data.MAD[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE')
NAPT.data.Median[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')]
NAPT.data.MAD[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')]
str(NAPT.Texture.Hydrometer)
NAPT.Texture.Hydrometer<-merge(NAPT.data.Median[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')],NAPT.data.MAD[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE')
str(NAPT.Texture.Hydrometer)
head(NAPT.Texture.Hydrometer,30)
NAPT.Texture.Pipette<-merge(NAPT.data.Median[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')],NAPT.data.MAD[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE')
str(NAPT.Texture.Pipette)
head(NAPT.Texture.Pipette,30)
NAPT.Texture.Hydrometer$ANALYSIS<-c('Hydrometer') ;
str(NAPT.Texture.Hydrometer)
head(NAPT.Texture.Hydrometer,30)
NAPT.Texture.Pipette<-merge(NAPT.data.Median[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')],NAPT.data.MAD[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE');
NAPT.Texture.Pipette$ANALYSIS<-c('Pipette') ;
str(NAPT.Texture.Pipette)
head(NAPT.Texture.Pipette,30)
head(NAPT.Texture.Hydrometer,30)
is.na(NAPT.Texture.Hydrometer)
which(is.na(NAPT.Texture.Hydrometer)
#### Second Merge the Pipette group of measurements
NAPT.Texture.Pipette<-merge(NAPT.data.Median[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')],NAPT.data.MAD[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE');
NAPT.Texture.Pipette$ANALYSIS<-c('Pipette') ;
str(NAPT.Texture.Pipette)
head(NAPT.Texture.Pipette,30)
# NAPT.Texture[which(!is.na(NAPT.Texture$V4.x)),]
NAPT.Texture$ANALYSIS<-'PLACEHOLDER'  ;
NAPT.Texture.Hydrometer<-NAPT.Texture
NAPT.Texture[which(NAPT.Texture$V4.x)),'ANALYSIS']<- 'Pipette'  ;
which(is.na(NAPT.Texture.Hydrometer))
which(is.na(NAPT.Texture.Hydrometer),arr.ind = T)
NAPT.Texture.Hydrometer
#  Tell the program where the package libraries are  #####################
.libPaths("C:/Felipe/SotwareANDCoding/R_Library/library")  ;
###### Introduction to Web Scraping #####
# Preliminaries
rm(list = ls())
# Set your working directory to some place you can find
setwd("C:/Felipe/LaserDifractionSoilTextureAnalysis/NAPTSoilsData") ;
# First we will need to install the packages we plan to use for this exercise (
# if they are not already installed on your computer).
# install.packages("httr", dependencies = TRUE)
# install.packages("stringr", dependencies = TRUE)
# install.packages("soiltexture")
# httr is a package for downloading html
library(httr)
# A package for manipulating strings
library(stringr)
library(XML)
#install.packages('rvest')
#install.packages("magrittr")
library(rvest)
library(magrittr)
# Package for soil texture plotting
library('soiltexture')
# Package for writing and reading excel files
library(XLConnect) ;
NAPT.data<-readWorksheetFromFile("Results_data_all.xlsx", sheet="Combined", startRow=1, endRow=864) ;
str(NAPT.data)
head(NAPT.data)
NAPT.data.head<-NAPT.data[c(1,2),] ;
NAPT.data.nohead<-NAPT.data[-c(1,2),] ;
head(NAPT.data.nohead)
NAPT.data.nohead$SAMPLE<-str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,1] ;
NAPT.data.nohead$VALUE<-str_split(str_split(NAPT.data.nohead$X, " ", simplify = T)[,2], "_" ,simplify = T)[,2] ;
NAPT.data.nohead.n_rows<-which(NAPT.data.nohead[,1] == 'n', arr.ind = T)  ;
NAPT.data.nohead[NAPT.data.nohead.n_rows, 'SAMPLE']<-NAPT.data.nohead[NAPT.data.nohead.n_rows+1, 'SAMPLE'] ;
NAPT.data.nohead[NAPT.data.nohead.n_rows, 'VALUE']<-NAPT.data.nohead[NAPT.data.nohead.n_rows, 'X'] ;
str(NAPT.data.nohead)
head(NAPT.data.nohead)
NAPT.data.Median<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'Median',]
str(NAPT.data.Median)
head(NAPT.data.Median)
NAPT.data.MAD<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'MAD',]
str(NAPT.data.MAD)
head(NAPT.data.MAD)
NAPT.data.n<-NAPT.data.nohead[NAPT.data.nohead$VALUE == 'n',]
str(NAPT.data.n)
head(NAPT.data.n)
NAPT.Texture.Hydrometer<-merge(NAPT.data.Median[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')],NAPT.data.MAD[,c('X', 'V1' , 'V2' , 'V3' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE');
NAPT.Texture.Hydrometer$ANALYSIS<-c('Hydrometer') ;
str(NAPT.Texture.Hydrometer)
head(NAPT.Texture.Hydrometer,30)
which(is.na(NAPT.Texture.Hydrometer),arr.ind = T)
NAPT.Texture.Pipette<-merge(NAPT.data.Median[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')],NAPT.data.MAD[,c('X', 'V4' , 'V5' , 'V6' , 'SAMPLE' , 'VALUE')], by= 'SAMPLE');
NAPT.Texture.Pipette$ANALYSIS<-c('Pipette') ;
str(NAPT.Texture.Pipette)
head(NAPT.Texture.Pipette,30)
which(is.na(NAPT.Texture.Pipette),arr.ind = T)
which(is.na(NAPT.Texture.Pipette),arr.ind = T)[,1]
unique(which(is.na(NAPT.Texture.Pipette),arr.ind = T)[,1])
NAPT.Texture.Pipette.NA_rows<-unique(which(is.na(NAPT.Texture.Pipette),arr.ind = T)[,1]);
NAPT.Texture.Pipette[-NAPT.Texture.Pipette.NA_rows,]
NAPT.all<-
rbind(NAPT.Texture.Hydrometer,NAPT.Texture.Pipette[-NAPT.Texture.Pipette.NA_rows,])
head(NAPT.Texture.Hydrometer,30)
names(NAPT.Texture.Hydrometer)
names(NAPT.Texture.Hydrometer)[c(3,4,5,8,9,10)]
names(NAPT.Texture.Hydrometer)[c(3,4,5,8,9,10)]<-c('SAND.Med', 'SILT.Med','CLAY.Med' ,'SAND.MAD', 'SILT.MAD','CLAY.MAD' )
str(NAPT.Texture.Hydrometer)
head(NAPT.Texture.Hydrometer,30)
names(NAPT.Texture.Pipette)
names(NAPT.Texture.Pipette)[c(3,4,5,8,9,10)]
names(NAPT.Texture.Pipette)[c(3,4,5,8,9,10)]<-c('SAND.Med', 'SILT.Med','CLAY.Med' ,'SAND.MAD', 'SILT.MAD','CLAY.MAD' )
str(NAPT.Texture.Pipette)
head(NAPT.Texture.Pipette,30)
NAPT.Texture.Pipette.NA_rows<-unique(which(is.na(NAPT.Texture.Pipette),arr.ind = T)[,1]);
NAPT.Texture.Pipette[-NAPT.Texture.Pipette.NA_rows,]
rbind(NAPT.Texture.Hydrometer,NAPT.Texture.Pipette[-NAPT.Texture.Pipette.NA_rows,])
NAPT.all<-rbind(NAPT.Texture.Hydrometer,NAPT.Texture.Pipette[-NAPT.Texture.Pipette.NA_rows,])
NAPT.all<-rbind(NAPT.Texture.Hydrometer,NAPT.Texture.Pipette[-NAPT.Texture.Pipette.NA_rows,])
str(NAPT.all)
head(NAPT.all,20)
tail(NAPT.all,20)
as.numeric(NAPT.all$SAND.Med)
NAPT.all$SAND.Med<-as.numeric(NAPT.all$SAND.Med) ;
str(NAPT.all)
N
NAPT.all$SILT.Med<-as.numeric(NAPT.all$SILT.Med) ;
NAPT.all$CLAY.Med<-as.numeric(NAPT.all$CLAY.Med) ;
NAPT.all$SAND.Med<-as.numeric(NAPT.all$SAND.Med) ;
NAPT.all$SILT.Med<-as.numeric(NAPT.all$SILT.Med) ;
NAPT.all$CLAY.Med<-as.numeric(NAPT.all$CLAY.Med) ;
NAPT.all$SAND.MAD<-as.numeric(NAPT.all$SAND.MAD) ;
NAPT.all$SILT.MAD<-as.numeric(NAPT.all$SILT.MAD) ;
NAPT.all$CLAY.MAD<-as.numeric(NAPT.all$CLAY.MAD) ;
str(NAPT.all)
head(NAPT.all,20)
tail(NAPT.all,20)
NAPT.Texture.data<-data.frame(as.numeric(NAPT.all$SAND.Med),as.numeric(NAPT.all$SILT.Med),as.numeric(NAPT.all$CLAY.Med),as.numeric(NAPT.all$SAND.MAD),as.numeric(NAPT.all$SILT.MAD),as.numeric(NAPT.all$CLAY.MAD), NAPT.all$SAMPLE, NAPT.all$ANALYSIS) ;
str(NAPT.all)
TT.plot(
class.sys          ="USDA-NCSS.TT",
tri.data           = NAPT.all,
css.names          =c('CLAY.Med' , 'SILT.Med' , 'SAND.Med'),
tri.sum.tst        =F,
main               ="NAPT  and ALP Samples Texture Data",
#class.p.bg.col     =T,
#pch                = "circles",
#col                ="black",
#cex                = 1,
frame.bg.col       ="gray75"
)
ALLP.data.1<-readWorksheetFromFile("Results_data_all.xlsx", sheet="ALP",startCol= 1, endCol=7) ;
str(ALLP.data.1)
head(ALLP.data.1)
names(ALLP.data.1)
ALLP.data<-readWorksheetFromFile("Results_data_all.xlsx", sheet="ALP",startCol= 1, endCol=7) ;
str(ALLP.data)
head(ALLP.data)
names(ALLP.data)<-c('SAMPLE', 'SAND.MEAN' , 'SAND.MAD', 'SILT.MEAN' ,  'SILT.MAD',  'CLAY.MEAN', 'CLAY.MAD' )  ;
str(ALLP.data)
head(ALLP.data)
TT.plot(
class.sys          ="USDA-NCSS.TT",
tri.data           = ALLP.data,
css.names          =c('CLAY.MEAN' , 'SILT.MEAN' , 'SAND.MEAN'),
tri.sum.tst        =F
# #class.p.bg.col     =T,
# pch                = "O",
# col                ="white",
# cex                = 1,
)
NAPT.Texture.clases<-TT.points.in.classes(
tri.data = NAPT,
class.sys = "USDA-NCSS.TT",
PiC.type  = "t"
)
NAPT.Texture.clases<-TT.points.in.classes(
tri.data = NAPT.all,
class.sys = "USDA-NCSS.TT",
PiC.type  = "t"
)
TT.plot(
class.sys          ="USDA-NCSS.TT",
tri.data           = ALLP.data,
css.names          =c('CLAY.Med' , 'SILT.Med' , 'SAND.Med'),
tri.sum.tst        =F
# #class.p.bg.col     =T,
# pch                = "O",
# col                ="white",
# cex                = 1,
)
TT.plot(
class.sys          ="USDA-NCSS.TT",
tri.data           = ALLP.data,
css.names          =c('CLAY.MEAN' , 'SILT.MEAN' , 'SAND.MEAN'),
tri.sum.tst        =F
# #class.p.bg.col     =T,
# pch                = "O",
# col                ="white",
# cex                = 1,
)
NAPT.Texture.clases<-TT.points.in.classes(
tri.data = NAPT.all,
class.sys = "USDA-NCSS.TT",
css.names = c('CLAY.Med' , 'SILT.Med' , 'SAND.Med'),
tri.sum.tst = F
PiC.type  = "t"
)
NAPT.Texture.clases<-TT.points.in.classes(
tri.data = NAPT.all,
class.sys = "USDA-NCSS.TT",
css.names = c('CLAY.Med' , 'SILT.Med' , 'SAND.Med'),
tri.sum.tst = F,
PiC.type  = "t"
)
NAPT.all$TextureClass<-NAPT.Texture.clases  ;
head(NAPT.all)
ALLP.Texture.clases<-TT.points.in.classes(
tri.data = ALLP.data,
class.sys = "USDA-NCSS.TT",
css.names = c('CLAY.MEAN' , 'SILT.MEAN' , 'SAND.MEAN'),
tri.sum.tst = F,
PiC.type  = "t"
)
ALLP.data$ANALYSIS<-c('Hydrometer') ;
ALLP.data$TextureClass<-ALLP.Texture.clases ;
head(ALLP.data)
str(ALLP.data)
head(NAPT.all)
str(NAPT.all)
NAPT.all
View(NAPT.all)
View(NAPT.all)
